Search.setIndex({"alltitles": {"API": [[28, "api"]], "API Docs": [[27, null]], "Adder Bricks": [[7, null]], "Application Bricks": [[8, null]], "Backend": [[0, null], [28, "backend"]], "Bricks": [[9, null], [11, null]], "Bricks Basics": [[28, "bricks-basics"]], "Example": [[28, "example"]], "Export Utilities": [[24, null]], "Fugu": [[27, null], [28, null]], "Fugu Backends": [[1, null]], "Get Started": [[28, "get-started"]], "Graph Bricks": [[10, null]], "Indices and tables": [[27, "indices-and-tables"]], "Input Bricks": [[12, null]], "Lava Backend": [[2, null]], "Lava Interfaces": [[3, null]], "Loihi Backend": [[4, null]], "Miscellaneous Utilities": [[26, null]], "Neural Network": [[20, null]], "Neuron": [[21, null]], "Port": [[18, null]], "Register Bricks": [[13, null]], "SNN Backend": [[5, null]], "STACS Backend": [[6, null]], "Scaffold": [[19, null]], "Scaffolds": [[28, "scaffolds"]], "Simulators": [[23, null]], "Stochastic Bricks": [[14, null]], "Synapse": [[22, null]], "Test Bricks": [[15, null]], "The Fugu Module": [[17, null]], "Utilities": [[25, null]], "Utility Bricks": [[16, null]], "Welcome to Fugu\u2019s documentation!": [[27, "welcome-to-fugu-s-documentation"]], "What is Fugu?": [[28, "what-is-fugu"]], "Workflow for Fugu algorithm": [[28, "workflow-for-fugu-algorithm"]]}, "docnames": ["fugu/backends/backend", "fugu/backends/index", "fugu/backends/lava_backend", "fugu/backends/lava_interfaces", "fugu/backends/loihi_backend", "fugu/backends/snn_backend", "fugu/backends/stacs_backend", "fugu/bricks/adder_bricks", "fugu/bricks/application_bricks", "fugu/bricks/bricks", "fugu/bricks/graph_bricks", "fugu/bricks/index", "fugu/bricks/input_bricks", "fugu/bricks/register_bricks", "fugu/bricks/stochastic_bricks", "fugu/bricks/test_bricks", "fugu/bricks/utility_bricks", "fugu/index", "fugu/scaffold/port", "fugu/scaffold/scaffold", "fugu/simulators/SpikingNeuralNetwork/neuralnetwork/neuralnetwork", "fugu/simulators/SpikingNeuralNetwork/neuron/neuron", "fugu/simulators/SpikingNeuralNetwork/synapse/synapse", "fugu/simulators/index", "fugu/utils/export_utils", "fugu/utils/index", "fugu/utils/misc", "index", "introduction"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["fugu/backends/backend.rst", "fugu/backends/index.rst", "fugu/backends/lava_backend.rst", "fugu/backends/lava_interfaces.rst", "fugu/backends/loihi_backend.rst", "fugu/backends/snn_backend.rst", "fugu/backends/stacs_backend.rst", "fugu/bricks/adder_bricks.rst", "fugu/bricks/application_bricks.rst", "fugu/bricks/bricks.rst", "fugu/bricks/graph_bricks.rst", "fugu/bricks/index.rst", "fugu/bricks/input_bricks.rst", "fugu/bricks/register_bricks.rst", "fugu/bricks/stochastic_bricks.rst", "fugu/bricks/test_bricks.rst", "fugu/bricks/utility_bricks.rst", "fugu/index.rst", "fugu/scaffold/port.rst", "fugu/scaffold/scaffold.rst", "fugu/simulators/SpikingNeuralNetwork/neuralnetwork/neuralnetwork.rst", "fugu/simulators/SpikingNeuralNetwork/neuron/neuron.rst", "fugu/simulators/SpikingNeuralNetwork/synapse/synapse.rst", "fugu/simulators/index.rst", "fugu/utils/export_utils.rst", "fugu/utils/index.rst", "fugu/utils/misc.rst", "index.rst", "introduction.rst"], "indexentries": {"_allocate() (fugu.backends.lava_backend.lava_backend method)": [[2, "fugu.backends.lava_backend.lava_Backend._allocate", false]], "autoport_match() (fugu.scaffold.port.portutil class method)": [[18, "fugu.scaffold.port.PortUtil.autoport_match", false]], "calculate_bit_length() (in module fugu.backends.lava_interfaces)": [[3, "fugu.backends.lava_interfaces.calculate_bit_length", false]], "calculate_hardware_weights() (in module fugu.backends.lava_interfaces)": [[3, "fugu.backends.lava_interfaces.calculate_hardware_weights", false]], "calculate_loihi_scale_factor() (in module fugu.backends.lava_backend)": [[2, "fugu.backends.lava_backend.calculate_loihi_scale_factor", false]], "calculate_weight_exponent() (in module fugu.backends.lava_interfaces)": [[3, "fugu.backends.lava_interfaces.calculate_weight_exponent", false]], "channeldata (class in fugu.scaffold.port)": [[18, "fugu.scaffold.port.ChannelData", false]], "channels (fugu.scaffold.port.portdata attribute)": [[18, "fugu.scaffold.port.PortData.channels", false]], "channels (fugu.scaffold.port.portspec attribute)": [[18, "fugu.scaffold.port.PortSpec.channels", false]], "channelspec (class in fugu.scaffold.port)": [[18, "fugu.scaffold.port.ChannelSpec", false]], "cleanup() (fugu.backends.lava_backend.lava_backend method)": [[2, "fugu.backends.lava_backend.lava_Backend.cleanup", false]], "cleanup() (fugu.backends.loihi_backend.loihi_backend method)": [[4, "fugu.backends.loihi_backend.loihi_Backend.cleanup", false]], "cleanup() (fugu.backends.stacs_backend.stacs_backend method)": [[6, "fugu.backends.stacs_backend.stacs_Backend.cleanup", false]], "coding (fugu.scaffold.port.channelspec attribute)": [[18, "fugu.scaffold.port.ChannelSpec.coding", false]], "compile() (fugu.backends.lava_backend.lava_backend method)": [[2, "fugu.backends.lava_backend.lava_Backend.compile", false]], "compile() (fugu.backends.loihi_backend.loihi_backend method)": [[4, "fugu.backends.loihi_backend.loihi_Backend.compile", false]], "compile() (fugu.backends.stacs_backend.stacs_backend method)": [[6, "fugu.backends.stacs_backend.stacs_Backend.compile", false]], "connect_input_to_lif() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.connect_input_to_lif", false]], "connect_input_to_lif() (fugu.backends.lava_interfaces.loihi2simbitaccinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface.connect_input_to_lif", false]], "connect_input_to_lif() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.connect_input_to_lif", false]], "connect_input_to_lif() (fugu.backends.lava_interfaces.loihiinterface method)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.connect_input_to_lif", false]], "connect_lif_to_lif() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.connect_lif_to_lif", false]], "connect_lif_to_lif() (fugu.backends.lava_interfaces.loihi2simbitaccinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface.connect_lif_to_lif", false]], "connect_lif_to_lif() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.connect_lif_to_lif", false]], "connect_lif_to_lif() (fugu.backends.lava_interfaces.loihiinterface method)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.connect_lif_to_lif", false]], "connect_lif_to_output() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.connect_lif_to_output", false]], "connect_lif_to_output() (fugu.backends.lava_interfaces.loihi2simbitaccinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface.connect_lif_to_output", false]], "connect_lif_to_output() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.connect_lif_to_output", false]], "connect_lif_to_output() (fugu.backends.lava_interfaces.loihiinterface method)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.connect_lif_to_output", false]], "current_decay_scale_factor (fugu.backends.lava_interfaces.loihi2hwinterface attribute)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.CURRENT_DECAY_SCALE_FACTOR", false]], "current_decay_scale_factor (fugu.backends.lava_interfaces.loihi2simbitaccinterface attribute)": [[3, "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface.CURRENT_DECAY_SCALE_FACTOR", false]], "current_decay_scale_factor (fugu.backends.lava_interfaces.loihi2siminterface attribute)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.CURRENT_DECAY_SCALE_FACTOR", false]], "description (fugu.scaffold.port.channelspec attribute)": [[18, "fugu.scaffold.port.ChannelSpec.description", false]], "description (fugu.scaffold.port.portspec attribute)": [[18, "fugu.scaffold.port.PortSpec.description", false]], "featurenotavailableexception": [[2, "fugu.backends.lava_backend.FeatureNotAvailableException", false]], "find_port_index() (fugu.scaffold.port.portutil class method)": [[18, "fugu.scaffold.port.PortUtil.find_port_index", false]], "find_port_name() (fugu.scaffold.port.portutil class method)": [[18, "fugu.scaffold.port.PortUtil.find_port_name", false]], "format_matrix() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.format_matrix", false]], "fugu.backends.lava_backend": [[2, "module-fugu.backends.lava_backend", false]], "fugu.backends.lava_interfaces": [[3, "module-fugu.backends.lava_interfaces", false]], "fugu.backends.loihi_backend": [[4, "module-fugu.backends.loihi_backend", false]], "fugu.backends.stacs_backend": [[6, "module-fugu.backends.stacs_backend", false]], "fugu.scaffold.port": [[18, "module-fugu.scaffold.port", false]], "get_autoports() (fugu.scaffold.port.portutil class method)": [[18, "fugu.scaffold.port.PortUtil.get_autoports", false]], "get_config() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.get_config", false]], "get_config() (fugu.backends.lava_interfaces.loihi2simbitaccinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface.get_config", false]], "get_config() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.get_config", false]], "get_config() (fugu.backends.lava_interfaces.loihiinterface method)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.get_config", false]], "get_lif_process() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.get_lif_process", false]], "get_lif_process() (fugu.backends.lava_interfaces.loihi2simbitaccinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface.get_lif_process", false]], "get_lif_process() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.get_lif_process", false]], "get_lif_process() (fugu.backends.lava_interfaces.loihiinterface method)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.get_lif_process", false]], "get_pass_through_weights() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.get_pass_through_weights", false]], "get_pass_through_weights() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.get_pass_through_weights", false]], "get_spike_output() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.get_spike_output", false]], "get_spike_output() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.get_spike_output", false]], "get_spike_output() (fugu.backends.lava_interfaces.loihiinterface method)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.get_spike_output", false]], "index (fugu.scaffold.port.portspec attribute)": [[18, "fugu.scaffold.port.PortSpec.index", false]], "inputiterator (class in fugu.backends.lava_backend)": [[2, "fugu.backends.lava_backend.InputIterator", false]], "lava_backend (class in fugu.backends.lava_backend)": [[2, "fugu.backends.lava_backend.lava_Backend", false]], "loihi2hwinterface (class in fugu.backends.lava_interfaces)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface", false]], "loihi2simbitaccinterface (class in fugu.backends.lava_interfaces)": [[3, "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface", false]], "loihi2siminterface (class in fugu.backends.lava_interfaces)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface", false]], "loihi_backend (class in fugu.backends.loihi_backend)": [[4, "fugu.backends.loihi_backend.loihi_Backend", false]], "loihiinterface (class in fugu.backends.lava_interfaces)": [[3, "fugu.backends.lava_interfaces.LoihiInterface", false]], "make_ports_from_specs() (fugu.scaffold.port.portutil class method)": [[18, "fugu.scaffold.port.PortUtil.make_ports_from_specs", false]], "max_delay_value (fugu.backends.lava_interfaces.loihiinterface attribute)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.MAX_DELAY_VALUE", false]], "maximum (fugu.scaffold.port.portspec attribute)": [[18, "fugu.scaffold.port.PortSpec.maximum", false]], "minimum (fugu.scaffold.port.portspec attribute)": [[18, "fugu.scaffold.port.PortSpec.minimum", false]], "module": [[2, "module-fugu.backends.lava_backend", false], [3, "module-fugu.backends.lava_interfaces", false], [4, "module-fugu.backends.loihi_backend", false], [6, "module-fugu.backends.stacs_backend", false], [18, "module-fugu.scaffold.port", false]], "name (fugu.scaffold.port.channelspec attribute)": [[18, "fugu.scaffold.port.ChannelSpec.name", false]], "name (fugu.scaffold.port.portspec attribute)": [[18, "fugu.scaffold.port.PortSpec.name", false]], "neurons (fugu.scaffold.port.channeldata attribute)": [[18, "fugu.scaffold.port.ChannelData.neurons", false]], "nonintegerdelayvalueexception": [[2, "fugu.backends.lava_backend.NonIntegerDelayValueException", false]], "portdata (class in fugu.scaffold.port)": [[18, "fugu.scaffold.port.PortData", false]], "porterror": [[18, "fugu.scaffold.port.PortError", false]], "portspec (class in fugu.scaffold.port)": [[18, "fugu.scaffold.port.PortSpec", false]], "portutil (class in fugu.scaffold.port)": [[18, "fugu.scaffold.port.PortUtil", false]], "print_output_probe_data() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.print_output_probe_data", false]], "print_output_probe_data() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.print_output_probe_data", false]], "print_output_probe_data() (fugu.backends.lava_interfaces.loihiinterface method)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.print_output_probe_data", false]], "reduce_factor_by_bits() (in module fugu.backends.lava_backend)": [[2, "fugu.backends.lava_backend.reduce_factor_by_bits", false]], "required (fugu.scaffold.port.channelspec attribute)": [[18, "fugu.scaffold.port.ChannelSpec.required", false]], "reset() (fugu.backends.lava_backend.lava_backend method)": [[2, "fugu.backends.lava_backend.lava_Backend.reset", false]], "reset() (fugu.backends.loihi_backend.loihi_backend method)": [[4, "fugu.backends.loihi_backend.loihi_Backend.reset", false]], "reset() (fugu.backends.stacs_backend.stacs_backend method)": [[6, "fugu.backends.stacs_backend.stacs_Backend.reset", false]], "run() (fugu.backends.lava_backend.lava_backend method)": [[2, "fugu.backends.lava_backend.lava_Backend.run", false]], "run() (fugu.backends.loihi_backend.loihi_backend method)": [[4, "fugu.backends.loihi_backend.loihi_Backend.run", false]], "run() (fugu.backends.stacs_backend.stacs_backend method)": [[6, "fugu.backends.stacs_backend.stacs_Backend.run", false]], "set_input_spikes() (fugu.backends.lava_backend.lava_backend method)": [[2, "fugu.backends.lava_backend.lava_Backend.set_input_spikes", false]], "set_input_spikes() (fugu.backends.loihi_backend.loihi_backend method)": [[4, "fugu.backends.loihi_backend.loihi_Backend.set_input_spikes", false]], "set_input_spikes() (fugu.backends.stacs_backend.stacs_backend method)": [[6, "fugu.backends.stacs_backend.stacs_Backend.set_input_spikes", false]], "set_properties() (fugu.backends.lava_backend.lava_backend method)": [[2, "fugu.backends.lava_backend.lava_Backend.set_properties", false]], "set_properties() (fugu.backends.loihi_backend.loihi_backend method)": [[4, "fugu.backends.loihi_backend.loihi_Backend.set_properties", false]], "set_properties() (fugu.backends.stacs_backend.stacs_backend method)": [[6, "fugu.backends.stacs_backend.stacs_Backend.set_properties", false]], "setcoreid() (fugu.backends.loihi_backend.loihi_backend method)": [[4, "fugu.backends.loihi_backend.loihi_Backend.setCoreID", false]], "setup_input_process() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.setup_input_process", false]], "setup_input_process() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.setup_input_process", false]], "setup_input_process() (fugu.backends.lava_interfaces.loihiinterface method)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.setup_input_process", false]], "setup_output_process() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.setup_output_process", false]], "setup_output_process() (fugu.backends.lava_interfaces.loihi2simbitaccinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface.setup_output_process", false]], "setup_output_process() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.setup_output_process", false]], "setup_output_process() (fugu.backends.lava_interfaces.loihiinterface method)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.setup_output_process", false]], "setup_probe() (fugu.backends.lava_interfaces.loihi2hwinterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.setup_probe", false]], "setup_probe() (fugu.backends.lava_interfaces.loihi2siminterface method)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.setup_probe", false]], "setup_probe() (fugu.backends.lava_interfaces.loihiinterface method)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.setup_probe", false]], "shape (fugu.scaffold.port.channelspec attribute)": [[18, "fugu.scaffold.port.ChannelSpec.shape", false]], "shape() (fugu.backends.lava_backend.inputiterator method)": [[2, "fugu.backends.lava_backend.InputIterator.shape", false]], "spec (fugu.scaffold.port.channeldata attribute)": [[18, "fugu.scaffold.port.ChannelData.spec", false]], "spec (fugu.scaffold.port.portdata attribute)": [[18, "fugu.scaffold.port.PortData.spec", false]], "stacs_backend (class in fugu.backends.stacs_backend)": [[6, "fugu.backends.stacs_backend.stacs_Backend", false]], "threshold_bit_limit (fugu.backends.lava_interfaces.loihi2simbitaccinterface attribute)": [[3, "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface.THRESHOLD_BIT_LIMIT", false]], "threshold_bit_limit (fugu.backends.lava_interfaces.loihiinterface attribute)": [[3, "fugu.backends.lava_interfaces.LoihiInterface.THRESHOLD_BIT_LIMIT", false]], "voltage_decay_scale_factor (fugu.backends.lava_interfaces.loihi2hwinterface attribute)": [[3, "fugu.backends.lava_interfaces.Loihi2HWInterface.VOLTAGE_DECAY_SCALE_FACTOR", false]], "voltage_decay_scale_factor (fugu.backends.lava_interfaces.loihi2simbitaccinterface attribute)": [[3, "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface.VOLTAGE_DECAY_SCALE_FACTOR", false]], "voltage_decay_scale_factor (fugu.backends.lava_interfaces.loihi2siminterface attribute)": [[3, "fugu.backends.lava_interfaces.Loihi2SimInterface.VOLTAGE_DECAY_SCALE_FACTOR", false]], "warniffeaturenotavailable() (in module fugu.backends.lava_backend)": [[2, "fugu.backends.lava_backend.warnIfFeatureNotAvailable", false]], "warnifvalueexceedsprecision() (in module fugu.backends.lava_backend)": [[2, "fugu.backends.lava_backend.warnIfValueExceedsPrecision", false]]}, "objects": {"fugu.backends": [[0, 0, 0, "-", "backend"], [2, 0, 0, "-", "lava_backend"], [3, 0, 0, "-", "lava_interfaces"], [4, 0, 0, "-", "loihi_backend"], [6, 0, 0, "-", "stacs_backend"]], "fugu.backends.backend": [[0, 1, 1, "", "Backend"], [0, 1, 1, "", "PortDataIterator"]], "fugu.backends.backend.Backend": [[0, 2, 1, "", "cleanup"], [0, 2, 1, "", "compile"], [0, 2, 1, "", "reset"], [0, 2, 1, "", "run"], [0, 2, 1, "", "set_input_spikes"], [0, 2, 1, "", "set_properties"]], "fugu.backends.backend.PortDataIterator": [[0, 2, 1, "", "findNeurons"]], "fugu.backends.lava_backend": [[2, 3, 1, "", "FeatureNotAvailableException"], [2, 1, 1, "", "InputIterator"], [2, 3, 1, "", "NonIntegerDelayValueException"], [2, 4, 1, "", "calculate_loihi_scale_factor"], [2, 1, 1, "", "lava_Backend"], [2, 4, 1, "", "reduce_factor_by_bits"], [2, 4, 1, "", "warnIfFeatureNotAvailable"], [2, 4, 1, "", "warnIfValueExceedsPrecision"]], "fugu.backends.lava_backend.InputIterator": [[2, 2, 1, "", "shape"]], "fugu.backends.lava_backend.lava_Backend": [[2, 2, 1, "", "_allocate"], [2, 2, 1, "", "cleanup"], [2, 2, 1, "", "compile"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "run"], [2, 2, 1, "", "set_input_spikes"], [2, 2, 1, "", "set_properties"]], "fugu.backends.lava_interfaces": [[3, 1, 1, "", "Loihi2HWInterface"], [3, 1, 1, "", "Loihi2SimBitAccInterface"], [3, 1, 1, "", "Loihi2SimInterface"], [3, 1, 1, "", "LoihiInterface"], [3, 4, 1, "", "calculate_bit_length"], [3, 4, 1, "", "calculate_hardware_weights"], [3, 4, 1, "", "calculate_weight_exponent"]], "fugu.backends.lava_interfaces.Loihi2HWInterface": [[3, 5, 1, "", "CURRENT_DECAY_SCALE_FACTOR"], [3, 5, 1, "", "VOLTAGE_DECAY_SCALE_FACTOR"], [3, 2, 1, "", "connect_input_to_lif"], [3, 2, 1, "", "connect_lif_to_lif"], [3, 2, 1, "", "connect_lif_to_output"], [3, 2, 1, "", "format_matrix"], [3, 2, 1, "", "get_config"], [3, 2, 1, "", "get_lif_process"], [3, 2, 1, "", "get_pass_through_weights"], [3, 2, 1, "", "get_spike_output"], [3, 2, 1, "", "print_output_probe_data"], [3, 2, 1, "", "setup_input_process"], [3, 2, 1, "", "setup_output_process"], [3, 2, 1, "", "setup_probe"]], "fugu.backends.lava_interfaces.Loihi2SimBitAccInterface": [[3, 5, 1, "", "CURRENT_DECAY_SCALE_FACTOR"], [3, 5, 1, "", "THRESHOLD_BIT_LIMIT"], [3, 5, 1, "", "VOLTAGE_DECAY_SCALE_FACTOR"], [3, 2, 1, "", "connect_input_to_lif"], [3, 2, 1, "", "connect_lif_to_lif"], [3, 2, 1, "", "connect_lif_to_output"], [3, 2, 1, "", "get_config"], [3, 2, 1, "", "get_lif_process"], [3, 2, 1, "", "setup_output_process"]], "fugu.backends.lava_interfaces.Loihi2SimInterface": [[3, 5, 1, "", "CURRENT_DECAY_SCALE_FACTOR"], [3, 5, 1, "", "VOLTAGE_DECAY_SCALE_FACTOR"], [3, 2, 1, "", "connect_input_to_lif"], [3, 2, 1, "", "connect_lif_to_lif"], [3, 2, 1, "", "connect_lif_to_output"], [3, 2, 1, "", "get_config"], [3, 2, 1, "", "get_lif_process"], [3, 2, 1, "", "get_pass_through_weights"], [3, 2, 1, "", "get_spike_output"], [3, 2, 1, "", "print_output_probe_data"], [3, 2, 1, "", "setup_input_process"], [3, 2, 1, "", "setup_output_process"], [3, 2, 1, "", "setup_probe"]], "fugu.backends.lava_interfaces.LoihiInterface": [[3, 5, 1, "", "MAX_DELAY_VALUE"], [3, 5, 1, "", "THRESHOLD_BIT_LIMIT"], [3, 2, 1, "", "connect_input_to_lif"], [3, 2, 1, "", "connect_lif_to_lif"], [3, 2, 1, "", "connect_lif_to_output"], [3, 2, 1, "", "get_config"], [3, 2, 1, "", "get_lif_process"], [3, 2, 1, "", "get_spike_output"], [3, 2, 1, "", "print_output_probe_data"], [3, 2, 1, "", "setup_input_process"], [3, 2, 1, "", "setup_output_process"], [3, 2, 1, "", "setup_probe"]], "fugu.backends.loihi_backend": [[4, 1, 1, "", "loihi_Backend"]], "fugu.backends.loihi_backend.loihi_Backend": [[4, 2, 1, "", "cleanup"], [4, 2, 1, "", "compile"], [4, 2, 1, "", "reset"], [4, 2, 1, "", "run"], [4, 2, 1, "", "setCoreID"], [4, 2, 1, "", "set_input_spikes"], [4, 2, 1, "", "set_properties"]], "fugu.backends.stacs_backend": [[6, 1, 1, "", "stacs_Backend"]], "fugu.backends.stacs_backend.stacs_Backend": [[6, 2, 1, "", "cleanup"], [6, 2, 1, "", "compile"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "run"], [6, 2, 1, "", "set_input_spikes"], [6, 2, 1, "", "set_properties"]], "fugu.bricks": [[7, 0, 0, "-", "adder_bricks"], [8, 0, 0, "-", "application_bricks"], [9, 0, 0, "-", "bricks"], [10, 0, 0, "-", "graph_bricks"], [12, 0, 0, "-", "input_bricks"], [13, 0, 0, "-", "register_bricks"], [14, 0, 0, "-", "stochastic_bricks"], [15, 0, 0, "-", "test_bricks"], [16, 0, 0, "-", "utility_bricks"]], "fugu.bricks.adder_bricks": [[7, 1, 1, "id0", "streaming_adder"], [7, 1, 1, "id4", "streaming_scalar_multiplier"], [7, 1, 1, "id2", "temporal_shift"]], "fugu.bricks.adder_bricks.streaming_adder": [[7, 2, 1, "id1", "build"]], "fugu.bricks.adder_bricks.streaming_scalar_multiplier": [[7, 2, 1, "id5", "build"]], "fugu.bricks.adder_bricks.temporal_shift": [[7, 2, 1, "id3", "build"]], "fugu.bricks.application_bricks": [[8, 1, 1, "", "LIS"]], "fugu.bricks.application_bricks.LIS": [[8, 2, 1, "", "build"]], "fugu.bricks.bricks": [[9, 1, 1, "", "Brick"], [9, 1, 1, "", "CompoundBrick"], [9, 1, 1, "", "InputBrick"], [9, 1, 1, "id0", "generate_brick_tag"]], "fugu.bricks.bricks.Brick": [[9, 5, 1, "", "brick_id"], [9, 2, 1, "", "build"], [9, 2, 1, "", "build2"], [9, 2, 1, "", "generate_neuron_name"], [9, 2, 1, "", "input_ports"], [9, 2, 1, "", "output_ports"], [9, 2, 1, "", "set_properties"], [9, 2, 1, "", "show_port"], [9, 2, 1, "", "show_ports"]], "fugu.bricks.bricks.CompoundBrick": [[9, 5, 1, "", "brick_id"], [9, 2, 1, "", "build"], [9, 2, 1, "", "build_child"], [9, 2, 1, "", "set_properties"]], "fugu.bricks.bricks.InputBrick": [[9, 2, 1, "", "get_input_value"], [9, 2, 1, "", "set_properties"]], "fugu.bricks.graph_bricks": [[10, 1, 1, "", "FlowAugmentingPath"], [10, 1, 1, "", "RegisterGraphTraversal"], [10, 1, 1, "", "SimpleGraphTraversal"]], "fugu.bricks.graph_bricks.FlowAugmentingPath": [[10, 2, 1, "", "build"], [10, 2, 1, "", "set_properties"]], "fugu.bricks.graph_bricks.RegisterGraphTraversal": [[10, 2, 1, "", "build"]], "fugu.bricks.graph_bricks.SimpleGraphTraversal": [[10, 2, 1, "", "build"]], "fugu.bricks.input_bricks": [[12, 1, 1, "", "BaseP_Input"], [12, 1, 1, "id0", "InputSource"], [12, 1, 1, "id2", "Vector_Input"]], "fugu.bricks.input_bricks.BaseP_Input": [[12, 2, 1, "", "set_properties"]], "fugu.bricks.input_bricks.InputSource": [[12, 2, 1, "id1", "connect"]], "fugu.bricks.input_bricks.Vector_Input": [[12, 2, 1, "id8", "build2"], [12, 2, 1, "id5", "get_input_value"], [12, 2, 1, "id6", "input_ports"], [12, 2, 1, "id3", "next"], [12, 2, 1, "id7", "output_ports"], [12, 2, 1, "id4", "set_properties"]], "fugu.bricks.register_bricks": [[13, 1, 1, "", "Addition"], [13, 1, 1, "", "Max"], [13, 1, 1, "", "Register"], [13, 1, 1, "", "Subtraction"]], "fugu.bricks.register_bricks.Addition": [[13, 2, 1, "", "build"]], "fugu.bricks.register_bricks.Max": [[13, 2, 1, "", "build"]], "fugu.bricks.register_bricks.Register": [[13, 2, 1, "", "build"]], "fugu.bricks.register_bricks.Subtraction": [[13, 2, 1, "", "build"]], "fugu.bricks.stochastic_bricks": [[14, 1, 1, "", "PRN"], [14, 1, 1, "", "Threshold"]], "fugu.bricks.stochastic_bricks.PRN": [[14, 2, 1, "", "build"]], "fugu.bricks.stochastic_bricks.Threshold": [[14, 2, 1, "", "build"], [14, 2, 1, "", "set_properties"]], "fugu.bricks.test_bricks": [[15, 1, 1, "", "Delay"], [15, 1, 1, "", "InstantDecay"], [15, 1, 1, "", "NeuronChain"], [15, 1, 1, "", "SumOfMaxes"], [15, 1, 1, "", "SynapseProperties"]], "fugu.bricks.test_bricks.Delay": [[15, 2, 1, "", "build"]], "fugu.bricks.test_bricks.InstantDecay": [[15, 2, 1, "", "build"]], "fugu.bricks.test_bricks.NeuronChain": [[15, 2, 1, "", "build"]], "fugu.bricks.test_bricks.SumOfMaxes": [[15, 2, 1, "", "build"]], "fugu.bricks.test_bricks.SynapseProperties": [[15, 2, 1, "", "build"], [15, 2, 1, "", "set_properties"]], "fugu.bricks.utility_bricks": [[16, 1, 1, "id5", "AND_OR"], [16, 1, 1, "id3", "Concatenate"], [16, 1, 1, "", "Copy"], [16, 1, 1, "id0", "Dot"], [16, 1, 1, "id9", "ParityCheck"], [16, 1, 1, "id11", "TemporalAdder"]], "fugu.bricks.utility_bricks.AND_OR": [[16, 2, 1, "id8", "build2"], [16, 2, 1, "id6", "input_ports"], [16, 2, 1, "id7", "output_ports"]], "fugu.bricks.utility_bricks.Concatenate": [[16, 2, 1, "id4", "build"]], "fugu.bricks.utility_bricks.Copy": [[16, 2, 1, "", "build"]], "fugu.bricks.utility_bricks.Dot": [[16, 2, 1, "id2", "build"], [16, 2, 1, "id1", "set_properties"]], "fugu.bricks.utility_bricks.ParityCheck": [[16, 2, 1, "id10", "build"]], "fugu.bricks.utility_bricks.TemporalAdder": [[16, 2, 1, "id12", "build"]], "fugu.scaffold": [[18, 0, 0, "-", "port"], [19, 0, 0, "-", "scaffold"]], "fugu.scaffold.port": [[18, 1, 1, "", "ChannelData"], [18, 1, 1, "", "ChannelSpec"], [18, 1, 1, "", "PortData"], [18, 3, 1, "", "PortError"], [18, 1, 1, "", "PortSpec"], [18, 1, 1, "", "PortUtil"]], "fugu.scaffold.port.ChannelData": [[18, 5, 1, "", "neurons"], [18, 5, 1, "", "spec"]], "fugu.scaffold.port.ChannelSpec": [[18, 5, 1, "", "coding"], [18, 5, 1, "", "description"], [18, 5, 1, "", "name"], [18, 5, 1, "", "required"], [18, 5, 1, "", "shape"]], "fugu.scaffold.port.PortData": [[18, 5, 1, "", "channels"], [18, 5, 1, "", "spec"]], "fugu.scaffold.port.PortSpec": [[18, 5, 1, "", "channels"], [18, 5, 1, "", "description"], [18, 5, 1, "", "index"], [18, 5, 1, "", "maximum"], [18, 5, 1, "", "minimum"], [18, 5, 1, "", "name"]], "fugu.scaffold.port.PortUtil": [[18, 2, 1, "", "autoport_match"], [18, 2, 1, "", "find_port_index"], [18, 2, 1, "", "find_port_name"], [18, 2, 1, "", "get_autoports"], [18, 2, 1, "", "make_ports_from_specs"]], "fugu.scaffold.scaffold": [[19, 1, 1, "", "Scaffold"]], "fugu.scaffold.scaffold.Scaffold": [[19, 2, 1, "", "add_brick"], [19, 2, 1, "", "all_in_neighbors_built"], [19, 2, 1, "", "connect"], [19, 2, 1, "", "lay_bricks"], [19, 2, 1, "", "summary"], [19, 5, 1, "", "supported_backends"]], "fugu.simulators.SpikingNeuralNetwork": [[20, 0, 0, "-", "neuralnetwork"], [21, 0, 0, "-", "neuron"], [22, 0, 0, "-", "synapse"]], "fugu.simulators.SpikingNeuralNetwork.neuralnetwork": [[20, 1, 1, "", "NeuralNetwork"]], "fugu.simulators.SpikingNeuralNetwork.neuralnetwork.NeuralNetwork": [[20, 2, 1, "", "add_multiple_neurons"], [20, 2, 1, "", "add_multiple_synapses"], [20, 2, 1, "", "add_neuron"], [20, 2, 1, "", "add_synapse"], [20, 2, 1, "", "list_neurons"], [20, 2, 1, "", "run"], [20, 2, 1, "", "step"], [20, 2, 1, "", "update_input_neuron"], [20, 2, 1, "", "update_network"]], "fugu.simulators.SpikingNeuralNetwork.neuron": [[21, 1, 1, "id16", "InputNeuron"], [21, 1, 1, "id2", "LIFNeuron"], [21, 1, 1, "id0", "Neuron"]], "fugu.simulators.SpikingNeuralNetwork.neuron.InputNeuron": [[21, 2, 1, "id17", "connect_to_input"], [21, 2, 1, "id18", "show_iterable"], [21, 6, 1, "id20", "threshold"], [21, 2, 1, "id19", "update_state"], [21, 6, 1, "id21", "voltage"]], "fugu.simulators.SpikingNeuralNetwork.neuron.LIFNeuron": [[21, 2, 1, "id8", "get_presynapses"], [21, 2, 1, "id9", "get_presynaptic_weights"], [21, 6, 1, "id14", "leakage_constant"], [21, 6, 1, "id13", "reset_voltage"], [21, 2, 1, "id3", "scale_weights"], [21, 6, 1, "id11", "scaling_factor"], [21, 2, 1, "id10", "set_presynaptic_weights"], [21, 2, 1, "id6", "show_params"], [21, 2, 1, "id7", "show_presynapses"], [21, 2, 1, "id5", "show_state"], [21, 6, 1, "id12", "threshold"], [21, 2, 1, "id4", "update_state"], [21, 6, 1, "id15", "voltage"]], "fugu.simulators.SpikingNeuralNetwork.neuron.Neuron": [[21, 2, 1, "id1", "update_state"]], "fugu.simulators.SpikingNeuralNetwork.synapse": [[22, 1, 1, "", "LearningSynapse"], [22, 1, 1, "id0", "Synapse"]], "fugu.simulators.SpikingNeuralNetwork.synapse.LearningSynapse": [[22, 2, 1, "", "apply_learning"], [22, 2, 1, "", "calculate_spike_timing"], [22, 6, 1, "", "delay"], [22, 2, 1, "", "get_key"], [22, 2, 1, "", "get_learning_params"], [22, 6, 1, "", "post_neuron"], [22, 6, 1, "", "pre_neuron"], [22, 2, 1, "", "set_params"], [22, 2, 1, "", "show_params"], [22, 2, 1, "", "update_state"], [22, 6, 1, "", "weight"]], "fugu.simulators.SpikingNeuralNetwork.synapse.Synapse": [[22, 2, 1, "id2", "get_key"], [22, 6, 1, "id3", "pre_neuron"], [22, 2, 1, "id1", "update_state"]], "fugu.utils": [[24, 0, 0, "-", "export_utils"], [26, 0, 0, "-", "misc"]], "fugu.utils.export_utils": [[24, 4, 1, "", "fill_results_from_graph"], [24, 4, 1, "", "generate_gexf"], [24, 4, 1, "", "get_spiked_info"], [24, 4, 1, "", "results_df_from_dict"], [24, 4, 1, "", "results_dict"], [24, 4, 1, "", "set_circuit_position"], [24, 4, 1, "", "set_position"]], "fugu.utils.misc": [[26, 4, 1, "", "CalculateSpikeTimes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:function", "5": "py:attribute", "6": "py:property"}, "terms": {"": [9, 12, 18, 19, 24, 28], "0": [0, 2, 4, 5, 6, 7, 9, 12, 13, 14, 18, 19, 21, 22], "00": 12, "07": 12, "1": [2, 3, 4, 7, 12, 13, 14, 16, 18, 19, 20, 21, 22, 28], "10": [0, 2, 4, 5, 6], "100": 21, "1048576": 2, "125": 7, "16": [2, 3], "2": [3, 12, 16, 28], "20": 12, "2019": 10, "22": 3, "222": 12, "3": [12, 16, 28], "31": 3, "4": [12, 16, 28], "400": 28, "4095": 3, "4096": 3, "5": [12, 13, 14, 15], "6": 3, "63": 3, "64": 2, "7": 12, "8": [12, 28], "A": [3, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 28], "AND": 16, "And": 16, "At": 28, "But": 3, "By": 12, "For": [12, 14, 19, 21, 28], "If": [8, 10, 12, 14, 15, 16, 18, 20, 21], "In": [12, 18, 19, 28], "It": 28, "OR": 16, "Or": 16, "Such": 28, "The": [3, 9, 12, 13, 16, 19, 21, 22, 27, 28], "Then": 12, "These": [15, 18, 19, 28], "To": 18, "__dict__": 22, "_alloc": 2, "_d": 22, "_learning_param": 22, "_post": 22, "_pre": 22, "_w": 22, "a_n": 22, "a_p": 22, "abc": [0, 3, 9, 21, 22], "about": [3, 19], "abov": [0, 2, 21], "abstract": [0, 3, 9, 12, 21, 22, 28], "acc": 3, "accept": [7, 9], "accomplish": 12, "accord": 22, "accordingli": 28, "account": 28, "accumul": 21, "act": 9, "actual": 18, "ad": [20, 21, 28], "adapt": 28, "add": [9, 16, 18, 19, 20], "add_brick": 19, "add_edg": [12, 15], "add_multiple_neuron": 20, "add_multiple_synaps": 20, "add_neuron": 20, "add_nod": [12, 15], "add_synaps": 20, "adder": [11, 16, 17], "adder_brick": 7, "addit": [13, 19, 24, 28], "advantag": 28, "after": [16, 21, 22], "against": [14, 16], "agre": 28, "aimon": 7, "algorithm": 27, "ali": 10, "all": [0, 8, 9, 10, 12, 13, 14, 16, 18, 19, 28], "all_in_neighbors_built": 19, "allow": [12, 16, 19, 28], "alpha": 7, "alreadi": 19, "also": [2, 10, 13, 18, 28], "alt": 28, "among": 22, "amount": 15, "an": [9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 28], "analyt": 28, "analyz": 28, "and_or": 16, "ani": [0, 9, 14, 15, 16, 19, 21], "anoth": [3, 19], "anyth": 2, "appli": [21, 22], "applic": [11, 17, 28], "application_brick": 8, "apply_learn": 22, "approach": 28, "ar": [0, 2, 3, 12, 15, 16, 18, 19, 21, 28], "architectur": 28, "arg": [8, 12], "argument": [12, 19], "around": 24, "arrai": [12, 21], "assembl": 2, "associ": [0, 18], "assum": [16, 18], "attach": 28, "attribut": 0, "augment": 10, "auto": [18, 19, 20], "automat": 19, "autoport_match": 18, "autoport_nam": 18, "auxillari": [7, 8, 9, 10, 12, 13, 14, 15, 16], "avial": 28, "avoid": 9, "axi": 12, "b": [2, 28], "backend": [3, 12, 15, 17, 19, 27], "base": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 28], "basep_input": 12, "basepinput": 12, "basic": 27, "batchabl": 12, "becaus": [0, 2], "becom": 12, "been": 28, "befor": [16, 22], "begin": [7, 8, 9, 13, 14, 16, 18], "begin_nod": 12, "behav": [0, 2], "behavior": [12, 28], "behind": 28, "being": [9, 28], "below": [12, 28], "between": [9, 19, 22, 28], "bia": 21, "bias_mant": 3, "bin": 21, "binari": [12, 13], "bind": [9, 19], "bit": [3, 7, 12, 16], "bit_length": 3, "bool": [5, 6, 9, 18, 19, 20, 21], "boolean": [12, 28], "brad": 7, "breadth": 10, "brick": [0, 2, 4, 5, 6, 17, 18, 19, 24, 27], "brick_id": 9, "brick_nam": 9, "brick_tag": 9, "build": [7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 28], "build2": [7, 9, 12, 16], "build_child": 9, "built": [9, 19, 28], "built_graph": 19, "bundl": 18, "c": 28, "calcul": [0, 2, 8, 13, 21, 22], "calculate_bit_length": 3, "calculate_hardware_weight": 3, "calculate_loihi_scale_factor": 2, "calculate_spike_tim": 22, "calculate_weight_expon": 3, "calculatespiketim": 26, "call": [18, 19, 28], "callback_funct": 3, "camera": 12, "can": [2, 9, 10, 12, 13, 16, 18, 19, 21, 24, 28], "capabl": 15, "care": 2, "case": [12, 18, 19], "caus": 18, "certain": [26, 28], "chain": 15, "chang": [0, 2], "channel": [0, 18], "channeldata": [17, 18], "channelspec": [17, 18], "characterist": 18, "check": [3, 19], "child_output": 15, "circuit": [0, 2, 4, 5, 6, 12, 19, 26, 28], "class": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22], "classmethod": [9, 12, 16, 18], "cleanup": [0, 2, 4, 5, 6], "clear": [3, 13], "code": [3, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 28], "coder": 28, "collaps": [12, 19], "collapse_binari": 12, "collect": [9, 13, 18, 28], "combin": [2, 28], "common": [8, 28], "commun": 28, "compar": 14, "compil": [0, 2, 4, 5, 6, 28], "compile_arg": [0, 2, 4, 5, 6], "complet": [7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 28], "complete_nam": [15, 16], "complete_nod": [12, 16, 28], "complete_node_list": 16, "compon": 28, "compos": 28, "composition": 28, "compoundbrick": [9, 10, 13, 15], "comprehens": 28, "comput": [7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 28], "concaten": 16, "concept": 28, "concern": 28, "conda": 28, "configur": 12, "connect": [3, 7, 8, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 28], "connect_input_to_lif": 3, "connect_lif_to_lif": 3, "connect_lif_to_output": 3, "connect_to_input": 21, "consid": 16, "consist": 28, "constant": 21, "construct": [18, 28], "constructor": [14, 21], "construtor": [8, 10, 12, 14, 15, 16], "contain": [7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 20, 24, 28], "contribut": 28, "control": [7, 8, 10, 12, 13, 14, 15, 16, 18, 28], "control_nod": [7, 8, 9, 10, 12, 13, 14, 15, 16, 28], "convei": [9, 18], "converst": [5, 6], "convert": [12, 21], "copi": 16, "core": [3, 28], "correspond": [12, 18, 28], "could": 18, "count": [2, 3, 4, 18], "creat": [0, 2, 4, 5, 6, 9, 12, 19, 20, 28], "creation": 19, "current": [0, 2, 12, 14, 15, 16, 19, 21, 22], "current_decay_scale_factor": 3, "d": [5, 6, 12, 16, 28], "data": [0, 2, 4, 5, 6, 9, 12, 16, 18, 21, 28], "datafram": [5, 6, 20, 24], "dataload": 2, "debug_mod": 20, "decai": [12, 14, 15, 21], "decay_const": 3, "declar": 18, "decreas": 22, "default": [3, 8, 9, 10, 12, 14, 15, 16, 19, 20, 21, 22, 24], "default_s": 13, "defin": [7, 8, 9, 10, 12, 13, 14, 15, 16, 21, 22, 28], "definit": [9, 12, 16], "delai": [3, 10, 12, 15, 22], "delay_valu": 15, "delayspars": 3, "delet": [0, 2, 4, 5, 6], "deliv": 12, "delta_t": 22, "denomin": 28, "dens": 3, "depend": 28, "deploi": 28, "deprec": [7, 9], "depth": [7, 8, 10, 12, 13, 14, 15, 16, 28], "dequ": 22, "deriv": 18, "describ": [9, 12, 16, 18, 28], "descript": 18, "design": [16, 18, 28], "desir": [14, 28], "dest_lif_data": 3, "dest_lif_process": 3, "detail": 28, "detect": 12, "detector": 12, "detemin": 21, "determin": [16, 18, 19, 26], "determinist": 21, "develop": 28, "device_id": 12, "device_nam": 12, "device_typ": 12, "df": 20, "dict": [0, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18], "dictionari": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 22, 26, 28], "dictioneri": 9, "differ": [0, 2, 13, 18, 21, 22, 28], "digraph": [9, 10, 19], "dim": 12, "dimens": 12, "dimension": [7, 28], "dimes": 12, "direct": [9, 12, 16], "displai": [19, 21, 22], "do": 2, "doc": 28, "document": [3, 28], "doe": [3, 9, 12, 16, 19], "don": 2, "done": [7, 8, 9, 10, 12, 13, 14, 15, 16, 28], "dot": [15, 16], "doubl": [21, 22], "down": 21, "draw": 14, "ds_legaci": 19, "du": 2, "durat": 3, "dure": [19, 28], "dv": 2, "dvi": 12, "e": [13, 16], "each": [2, 12, 15, 18, 28], "eas": 28, "easi": 28, "edg": [10, 12, 15, 16, 28], "effect": [9, 12, 16], "effici": 28, "either": [16, 19, 22, 26], "element": [7, 8, 10, 12, 13, 14, 15, 16], "embed": 24, "empir": 3, "enabl": [21, 28], "encod": [12, 13, 21, 28], "end": [14, 28], "entir": [2, 3, 28], "entri": [12, 16, 28], "environ": 28, "equival": 19, "error": [5, 6, 16, 22], "etc": [7, 8, 10, 12, 13, 14, 15, 16, 21], "everi": [2, 21], "everytim": 12, "evolut": [20, 21, 22], "evolv": 20, "exact": 19, "exactli": 18, "exampl": [0, 2, 12, 16, 19], "exce": 21, "exceed": 14, "except": [2, 16, 18, 26], "exchang": 24, "excpect": 7, "execut": 28, "exist": [18, 28], "exp": 22, "expect": [8, 10, 12, 13, 14, 15, 16, 28], "explic": 3, "explicit": 19, "explicitli": 19, "explor": 28, "export": [17, 25], "export_util": 24, "extend": 28, "facilit": 28, "factor": [12, 21, 22, 28], "factori": 18, "fals": [0, 2, 4, 5, 6, 10, 12, 13, 19, 20, 21], "familiar": 28, "featur": [2, 15, 28], "featurenotavailableexcept": 2, "feed": [2, 9, 21], "field": 24, "file": [24, 28], "filenam": 24, "fill_results_from_graph": 24, "find": 18, "find_port_index": 18, "find_port_nam": 18, "findneuron": 0, "fire": [7, 8, 9, 10, 12, 13, 14, 15, 16, 21, 28], "first": [10, 12, 13, 14, 16, 28], "fix": [2, 21], "flag": [9, 12, 16, 19], "flag_bit_id": 12, "flag_fire_valu": 12, "flatten": 12, "float": [14, 21, 22], "flow": [10, 28], "flow_graph": 10, "flowaugmentingpath": 10, "fo": 20, "folder": 28, "follow": 22, "forc": 14, "form": [9, 12, 16, 28], "format": [5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 24, 28], "format_matrix": 3, "forse": 28, "found": [0, 2, 28], "foundat": 28, "framework": 28, "free": [0, 2, 4, 5, 6], "frequenc": 21, "from": [9, 12, 13, 14, 16, 18, 19, 20, 21, 22, 28], "from_brick": 19, "from_port": 19, "front": 28, "fugu": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26], "fulli": 28, "function": [0, 2, 7, 9, 19, 26, 28], "futur": 28, "gener": [9, 12, 14, 28], "generate_brick_tag": 9, "generate_gexf": 24, "generate_neuron_nam": 9, "get": [5, 6, 9, 12, 22, 27], "get_autoport": 18, "get_chang": [0, 2], "get_config": 3, "get_input_valu": [9, 12], "get_kei": 22, "get_learning_param": 22, "get_lif_process": 3, "get_pass_through_weight": 3, "get_presynaps": 21, "get_presynaptic_weight": 21, "get_spike_output": 3, "get_spiked_info": 24, "getter": 22, "gexf": 24, "given": [0, 8, 10, 18, 19, 22], "goal": 28, "gov": 7, "graph": [0, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 24, 28], "graph_brick": 10, "graphic": 28, "ground": 2, "group": 18, "ha": [2, 10, 12, 16, 18, 28], "handl": [9, 12, 14, 16, 18, 19], "happen": [9, 12, 16], "hardwar": [3, 12, 28], "have": [0, 2, 3, 12, 15, 16, 18, 28], "head": 28, "held": 28, "help": 28, "here": [9, 12, 16], "hidden": 16, "hierarch": 28, "high": 28, "higher": 28, "histori": 22, "hope": 28, "how": [0, 2, 12, 28], "howev": 3, "i": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27], "identifi": 28, "imag": 28, "implement": [9, 12, 15, 22, 28], "impli": 3, "in_stream": 21, "includ": [7, 9, 12, 18, 28], "incom": [16, 21, 22], "incorpor": [0, 2], "incorrect": 16, "increas": 22, "independ": 28, "index": [12, 16, 18, 27, 28], "indic": [9, 12, 16, 19, 21], "inetgr": 21, "inform": [10, 12, 18, 19, 20, 22, 28], "inherit": [9, 12, 14, 16, 21], "initi": [0, 2, 5, 6, 26], "initial_valu": 13, "initial_voltag": 3, "input": [0, 2, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26, 28], "input3": 19, "input_brick": 12, "input_cod": [7, 8, 9, 10, 12, 13, 14, 15, 16, 28], "input_coding_typ": 28, "input_delai": 3, "input_iter": 3, "input_list": [7, 8, 9, 10, 12, 13, 14, 15, 16, 28], "input_nod": 19, "input_port": [9, 12, 16, 19], "input_process": 3, "input_valu": 20, "input_weight": 3, "inputbrick": [9, 12], "inputiter": 2, "inputneuron": 21, "inputsourc": 12, "instal": 28, "instanc": 18, "instant": 15, "instantdecai": 15, "instead": [0, 2, 7, 9], "int": [12, 14, 15, 16, 18, 19, 21, 22], "integ": [12, 13], "integr": [21, 28], "intel": 28, "inter": 21, "interfac": [1, 17, 22], "intermedi": 28, "intern": [0, 2, 21], "intricaci": 28, "ir": 28, "is_built": 28, "isort": [0, 2, 4, 5], "iter": [0, 2, 20, 21], "its": [0, 9, 21, 28], "itself": [19, 28], "jbaimon": 7, "job": 19, "jupyt": 28, "just": 18, "kei": [7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 22, 24, 26, 28], "kernel": 28, "kind": 18, "known": [9, 12, 16], "kwisthout": 10, "l": [8, 10, 14, 16], "label": 28, "larg": [24, 28], "larger": 28, "last": 12, "lastli": 12, "latter": 19, "lava": [1, 17], "lava_backend": 2, "lava_interfac": 3, "lay_brick": 19, "layer": [7, 8, 10, 12, 13, 14, 15, 16, 26], "leak": 21, "leakag": 21, "leakage_const": 21, "leaki": [21, 28], "learn": 22, "learning_flag": 20, "learning_param": 22, "learning_rul": 22, "learningparam": 22, "learningsynaps": 22, "least": [3, 14], "legaci": 9, "legitim": 18, "length": [8, 22], "level": [19, 28], "leverag": 28, "li": 8, "librari": 28, "lif": [2, 28], "lif_data": 3, "lif_process": 3, "lifneuron": [20, 21], "like": [12, 28], "link": 28, "list": [2, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 28], "list_neuron": 20, "local": 28, "logic": [16, 19], "loihi": [1, 17, 28], "loihi2hwinterfac": 3, "loihi2simbitaccinterfac": 3, "loihi2siminterfac": 3, "loihi_backend": 4, "loihiinterfac": 3, "longest": 8, "look": [3, 12], "low": 28, "lowest": 28, "m": [3, 21], "mai": [18, 19, 28], "main": 28, "main_kei": 26, "main_nam": 15, "make": [18, 19], "make_ports_from_spec": 18, "manag": 28, "mani": [13, 28], "map": [12, 20], "mark": 28, "match": [16, 18], "max": [3, 13, 15], "max_bia": 2, "max_delay_valu": 3, "max_siz": 13, "max_threshold": 2, "max_weight": 2, "maximum": [3, 13, 18, 21], "mean": 12, "mechan": 28, "membran": 21, "menbran": 21, "metadata": [7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 28], "method": [0, 2, 7, 9, 12, 18], "might": 12, "min_scal": 2, "minimum": [18, 21, 22], "misc": 26, "miscellan": [17, 25], "mod_neuron": 22, "mode": [12, 16], "model": [3, 21, 22, 28], "modifi": 22, "modul": [27, 28], "modulatori": 22, "more": [16, 28], "most": 28, "motion": 12, "movement": 12, "multipl": [16, 19], "multipli": 7, "must": [9, 12], "my": [0, 2], "n": [12, 15, 22], "n_step": [0, 2, 4, 5, 6, 20], "name": [3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 26, 28], "ndarrai": [12, 21], "necessari": 28, "need": [2, 12, 21, 22, 28], "neg": [12, 13, 22], "negat": 16, "neighbor": 19, "neruon": 21, "network": [9, 12, 17, 22, 23, 28], "networkx": [7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 24, 28], "neural": [9, 17, 22, 23, 28], "neuralnetwork": 20, "neuro": 3, "neuromorph": 28, "neuron": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 28], "neuron_iter": 20, "neuron_nam": [9, 20, 26], "neuron_numb": 24, "neuron_prop": [0, 2], "neuronchain": 15, "new": [5, 6, 7, 9, 20, 21, 22, 28], "new_complete_nod": 14, "new_delai": 22, "new_neuron": 20, "new_synaps": 20, "new_weight": 22, "newer": 19, "next": 12, "nmc": 28, "node": [0, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 24, 28], "non": [3, 12, 13, 22], "none": [5, 6, 7, 9, 10, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24], "nonintegerdelayvalueexcept": 2, "note": [0, 2, 3, 12, 19], "notebook": 28, "now": 12, "np": 21, "num_bit": 2, "num_input": 15, "num_neuron": 15, "number": [5, 6, 8, 12, 14, 15, 16, 18, 19, 20, 21, 22], "number_of_el": 16, "numer": 18, "numpi": [12, 28], "o": [9, 12, 16], "obj": 19, "object": [0, 2, 9, 10, 12, 16, 18, 19, 20, 22, 28], "occur": 22, "odd": 16, "offer": 28, "old": 18, "older": [9, 19], "one": [0, 12, 18, 19, 20, 21, 22, 28], "onli": [12, 13, 14, 16, 18, 19, 28], "oper": [16, 28], "optim": 28, "option": [12, 18, 21, 22, 24], "organ": [18, 28], "origin": [9, 12, 16], "other": [9, 12, 16, 18, 19, 22, 28], "otherwis": 21, "our": [9, 12, 28], "outlin": 28, "output": [0, 2, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 28], "output_co": 16, "output_cod": [7, 8, 10, 12, 13, 14, 16, 28], "output_list": [7, 8, 10, 12, 13, 14, 15, 16, 28], "output_port": [9, 12, 16, 19], "output_process": 3, "output_shap": 12, "output_weight": 3, "over": 20, "overarch": 28, "overrid": [7, 9], "p": [4, 12, 14, 21], "packet": 12, "page": [27, 28], "panda": [20, 24, 28], "param": [0, 2, 4, 5, 6, 10, 12, 13, 14, 15, 16, 19, 20, 21], "paramet": [0, 2, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 21, 22, 24, 26, 28], "parameter": 28, "parent": 10, "pariti": 16, "paritycheck": 16, "particular": [12, 28], "pass": [9, 10, 12, 14, 15, 16, 18, 19, 20], "path": [10, 12], "perform": [16, 21], "person": 28, "platform": 28, "png": 28, "poisson": 21, "popul": [0, 2, 4, 5, 6], "port": [0, 9, 12, 16, 17, 19, 27], "port_nam": 18, "portdata": [9, 12, 16, 17, 18], "portdataiter": 0, "porterror": [17, 18], "portspec": [9, 12, 16, 17, 18], "portutil": [17, 18], "posit": [18, 28], "post": [22, 28], "post_neuron": 22, "potenti": 12, "pre": [21, 22, 28], "pre_neuron": 22, "precis": 2, "predecessor": 10, "preserv": 12, "presynapt": 21, "print": 19, "print_output_probe_data": 3, "prior": [3, 28], "prn": 14, "probabl": [14, 21], "probe": 21, "problem": [10, 12, 28], "process": [2, 7, 9, 14, 16, 28], "process_data": 3, "produc": [9, 12, 14, 16], "properti": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 21, 22, 24, 28], "propos": [0, 2], "provid": [13, 14, 20, 22, 28], "pseudocod": 28, "psuedo": 14, "purpos": 18, "py": [9, 12, 16], "pynn": 19, "python": [3, 28], "pytorch": 28, "queri": [18, 19], "queue": 22, "quickli": 28, "rais": [5, 6, 13, 14, 15, 16, 19, 21, 26], "random": 14, "randomli": 14, "raster": [15, 16], "rate": 21, "rather": 28, "read": 21, "realist": 21, "realiti": 28, "reason": 3, "recal": 13, "receiv": [12, 13, 18, 22], "recommend": 28, "record": 21, "record_potenti": 20, "reduce_factor_by_bit": 2, "redund": 12, "refer": [10, 19, 22, 28], "region": 28, "regist": [11, 14, 17], "register_brick": 13, "register_label": 13, "register_s": 13, "registergraphtravers": 10, "regular": 18, "relai": [22, 28], "relev": 28, "remov": 12, "report": 15, "repres": [9, 10, 12, 28], "represent": 28, "requir": [2, 5, 6, 12, 14, 18, 28], "requirements3": 28, "reset": [0, 2, 4, 5, 6, 21], "reset_voltag": 21, "resid": 0, "respect": [19, 22], "respons": 28, "restrict": 3, "result": [12, 20, 24], "results_df": 24, "results_df_from_dict": 24, "results_dict": 24, "results_dictionari": 24, "retain": 19, "return": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 28], "return_potenti": [0, 2, 4, 5, 6], "rtype": 22, "rubric": 12, "rule": 22, "run": [0, 2, 4, 5, 6, 20, 28], "sai": 28, "said": [0, 2], "same": [3, 12, 19], "sandia": 7, "scaffold": [0, 2, 4, 5, 6, 9, 12, 16, 17, 18, 24, 27], "scalar": [2, 7], "scale": [21, 22, 28], "scale_factor": 3, "scale_weight": 21, "scaling_factor": 21, "scheme": 21, "search": [10, 27], "second": 13, "section": 28, "see": [3, 9, 12, 16, 28], "seem": 3, "self": [0, 2, 7, 8, 10, 13, 14, 16, 22, 28], "sens": [9, 12, 16, 21], "sensor": 12, "sent": 22, "separ": [2, 19], "sequenc": 8, "sequence_length": 8, "set": [0, 2, 3, 4, 5, 6, 12, 13, 15, 18, 21, 22], "set_circuit_posit": 24, "set_input_spik": [0, 2, 4, 5, 6], "set_param": 22, "set_posit": 24, "set_presynaptic_weight": 21, "set_properti": [0, 2, 4, 5, 6, 9, 10, 12, 14, 15, 16], "set_siz": 15, "setcoreid": 4, "setup": 28, "setup_input_process": 3, "setup_output_process": 3, "setup_prob": 3, "sever": 18, "shape": [2, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19], "shift": [3, 7], "shift_length": 7, "shim": 9, "shortest": [10, 12], "should": [3, 7, 8, 9, 10, 12, 14, 15, 16, 19, 21, 28], "show_iter": 21, "show_param": [21, 22], "show_port": 9, "show_presynaps": 21, "show_stat": 21, "signal": [16, 18, 21, 22, 28], "simpl": [13, 15, 22, 24, 28], "simple_synaps": 20, "simplegraphtravers": 10, "simul": [5, 6, 17, 20, 21, 22, 27, 28], "sinc": [2, 16], "singl": [2, 10, 12, 16, 19, 28], "single_set": 13, "size": [8, 18, 28], "skip_fil": [0, 2, 4, 5], "slice": 12, "small": 28, "sna": 28, "snn": [1, 17, 19, 28], "snn_backend": 5, "snn_legaci": 19, "so": [12, 16], "softwar": 28, "solv": [10, 12], "some": [3, 9, 12, 16, 18, 28], "some_other_neuron": 12, "somebrick": 19, "someth": [12, 18], "sort": [3, 28], "sourc": [3, 9, 10, 12], "source_lif_data": 3, "source_lif_process": 3, "space": 12, "spec": 18, "specif": [0, 2, 4, 5, 6, 12, 16, 18, 28], "specifi": [8, 10, 12, 14, 15, 16, 19], "spike": [0, 2, 5, 6, 12, 14, 16, 21, 22, 24, 26, 28], "spike_hist": 22, "spike_threshold": 3, "spikingneuralnetwork": [20, 21, 22], "stac": [1, 17], "stack": 28, "stacs_backend": 6, "start": [10, 27], "starting_scal": 2, "state": [21, 22, 24], "static": [12, 21, 22], "stdp": 22, "step": [0, 2, 4, 5, 6, 14, 16, 20, 21, 22, 28], "stochast": [11, 17], "stochastic_brick": 14, "store": 13, "store_parent_info": 10, "str": [9, 12, 14, 15, 16, 18, 22], "stream": [7, 12, 21], "streaming_add": 7, "streaming_scalar_multipli": 7, "strict": 18, "string": [7, 9, 18, 19, 20, 21, 28], "style": [9, 18], "subclass": [7, 9], "subroutin": 9, "subsequ": 8, "subtract": 13, "suffix": [18, 19], "suggest": 3, "sum": [13, 15, 21], "summari": 19, "sumofmax": 15, "suppli": 9, "support": [2, 8, 10, 12, 13, 14, 15, 16, 28], "supported_backend": 19, "supported_cod": 28, "suppos": [12, 28], "synaps": [0, 2, 4, 5, 6, 12, 17, 20, 21, 23], "synapse_iter": 20, "synapse_prop": [0, 2], "synapseproperti": 15, "synapt": [21, 22], "synchron": 28, "system": 28, "t": [2, 9, 12], "t_u": 16, "t_v": 16, "t_w": 16, "tag": 9, "take": [9, 12, 16], "target": [10, 28], "target_graph": 10, "target_nod": 10, "tau": 22, "tcp": 12, "tcp_port": 12, "tcpporta": 12, "tcpportb": 12, "tcpportc": 12, "tell": 12, "tempor": [7, 8, 9, 10, 14, 16], "temporal_shift": 7, "temporaladd": 16, "term": 28, "terminologi": 2, "test": [11, 17], "test_brick": 15, "than": [18, 28], "thei": [0, 2], "them": [20, 21, 28], "themaximum": 3, "themselv": 28, "thi": [0, 2, 3, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 28], "think": 28, "those": 15, "three": [16, 22, 28], "threshold": [12, 14, 16, 21], "threshold_bit_limit": [2, 3], "through": [10, 22, 28], "time": [0, 2, 4, 5, 6, 12, 16, 18, 20, 21, 22, 24, 28], "time_dimens": 12, "timestep": [12, 14, 16, 21, 26], "to_brick": 19, "to_port": 19, "todai": 28, "togeth": [16, 18], "too": 13, "tool": 28, "topic": 18, "transfer": 28, "translat": [19, 28], "transmist": 28, "transmit": [22, 28], "travers": 10, "treat": 12, "true": [5, 6, 12, 18], "truth": 2, "tupl": [2, 18, 20, 22, 28], "two": 13, "txt": 28, "type": [4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 28], "typeerror": 21, "typic": 18, "u": [3, 16, 28], "un": 14, "unari": [12, 14], "undefin": [12, 13, 14, 15, 16], "under": 28, "undergo": 21, "understand": 28, "unexpect": 15, "uniform": 14, "uniqu": [8, 9, 10, 12, 14, 15, 16], "unless": 19, "unsupport": 16, "updat": [9, 10, 12, 14, 15, 16, 21, 22], "update_input_neuron": 20, "update_network": 20, "update_st": [21, 22], "us": [0, 2, 7, 8, 9, 10, 12, 14, 15, 16, 18, 19, 24, 26, 28], "usb": 12, "user": 28, "util": [11, 17, 27], "utility_brick": 16, "v": [2, 16, 21], "valu": [2, 3, 9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24], "value_nam": 2, "valueerror": [13, 14, 15, 16, 19, 26], "var": 3, "variabl": 18, "varieti": 28, "variou": 12, "ve": 28, "vector": [2, 12, 16], "vector_input": 12, "vectorinput": 12, "verbos": 19, "version": [9, 10, 12, 14, 15, 16], "vertex": 10, "via": 16, "virtual": 28, "voltag": [2, 21], "voltage_decay_scale_factor": 3, "vth": 2, "w": [16, 22], "wa": 12, "wai": [0, 2], "walk": 28, "want": [12, 16], "warniffeaturenotavail": 2, "warnifvalueexceedsprecis": 2, "we": [2, 3, 12, 16, 18, 28], "weight": [3, 10, 12, 15, 16, 21, 22], "weight_arr": 21, "weight_expon": 3, "weight_scale_factor": 3, "what": 27, "whatev": 12, "when": [7, 8, 9, 10, 12, 13, 14, 15, 16, 22, 26], "where": [12, 22], "whether": [26, 28], "which": [9, 12, 16, 18, 21, 22, 28], "while": [19, 21], "whose": 19, "why": 3, "width": 28, "wise": 16, "within": 28, "without": 19, "work": [18, 28], "workflow": 27, "world": 28, "would": [3, 18], "wrapper": 24, "write_gexf": 24, "written": 28, "x": [12, 13], "xml": 24, "y": 13, "yet": [0, 2], "you": [12, 16, 19], "your": 28, "zero": 18}, "titles": ["Backend", "Fugu Backends", "Lava Backend", "Lava Interfaces", "Loihi Backend", "SNN Backend", "STACS Backend", "Adder Bricks", "Application Bricks", "Bricks", "Graph Bricks", "Bricks", "Input Bricks", "Register Bricks", "Stochastic Bricks", "Test Bricks", "Utility Bricks", "The Fugu Module", "Port", "Scaffold", "Neural Network", "Neuron", "Synapse", "Simulators", "Export Utilities", "Utilities", "Miscellaneous Utilities", "Fugu", "Fugu"], "titleterms": {"": 27, "The": 17, "adder": 7, "algorithm": 28, "api": [27, 28], "applic": 8, "backend": [0, 1, 2, 4, 5, 6, 28], "basic": 28, "brick": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28], "doc": 27, "document": 27, "exampl": 28, "export": 24, "fugu": [1, 17, 27, 28], "get": 28, "graph": 10, "i": 28, "indic": 27, "input": 12, "interfac": 3, "lava": [2, 3], "loihi": 4, "miscellan": 26, "modul": 17, "network": 20, "neural": 20, "neuron": 21, "port": 18, "regist": 13, "scaffold": [19, 28], "simul": 23, "snn": 5, "stac": 6, "start": 28, "stochast": 14, "synaps": 22, "tabl": 27, "test": 15, "util": [16, 24, 25, 26], "welcom": 27, "what": 28, "workflow": 28}})