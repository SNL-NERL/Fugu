Search.setIndex({"docnames": ["contributing", "examples/adder_example", "examples/fugu_test", "examples/index", "examples/max_example", "examples/threshold_brick_example", "examples/vector_example", "fugu", "fugu/backends/backend", "fugu/backends/index", "fugu/backends/loihi_backend", "fugu/backends/snn_backend", "fugu/bricks/adder_bricks", "fugu/bricks/application_bricks", "fugu/bricks/bricks", "fugu/bricks/graph_bricks", "fugu/bricks/index", "fugu/bricks/input_bricks", "fugu/bricks/register_bricks", "fugu/bricks/stochastic_bricks", "fugu/bricks/test_bricks", "fugu/bricks/utility_bricks", "fugu/index", "fugu/scaffold/scaffold", "fugu/simulators/SpikingNeuralNetwork/neuralnetwork/neuralnetwork", "fugu/simulators/SpikingNeuralNetwork/neuron/neuron", "fugu/simulators/SpikingNeuralNetwork/synapse/synapse", "fugu/simulators/index", "fugu/utils/export_utils", "fugu/utils/index", "fugu/utils/misc", "index", "modules", "neuron_model"], "filenames": ["contributing.rst", "examples/adder_example.rst", "examples/fugu_test.rst", "examples/index.rst", "examples/max_example.rst", "examples/threshold_brick_example.rst", "examples/vector_example.rst", "fugu.rst", "fugu/backends/backend.rst", "fugu/backends/index.rst", "fugu/backends/loihi_backend.rst", "fugu/backends/snn_backend.rst", "fugu/bricks/adder_bricks.rst", "fugu/bricks/application_bricks.rst", "fugu/bricks/bricks.rst", "fugu/bricks/graph_bricks.rst", "fugu/bricks/index.rst", "fugu/bricks/input_bricks.rst", "fugu/bricks/register_bricks.rst", "fugu/bricks/stochastic_bricks.rst", "fugu/bricks/test_bricks.rst", "fugu/bricks/utility_bricks.rst", "fugu/index.rst", "fugu/scaffold/scaffold.rst", "fugu/simulators/SpikingNeuralNetwork/neuralnetwork/neuralnetwork.rst", "fugu/simulators/SpikingNeuralNetwork/neuron/neuron.rst", "fugu/simulators/SpikingNeuralNetwork/synapse/synapse.rst", "fugu/simulators/index.rst", "fugu/utils/export_utils.rst", "fugu/utils/index.rst", "fugu/utils/misc.rst", "index.rst", "modules.rst", "neuron_model.rst"], "titles": ["Contributing to Fugu", "Adder Example", "Fugu Test", "Examples API", "Max Example", "Threshold Brick Example", "Vector Example", "fugu package", "Backend", "Fugu Backends", "Loihi Backend", "SNN Backend", "Adder Bricks", "Application Bricks", "Bricks", "Graph Bricks", "Bricks", "Input Bricks", "Register Bricks", "Stochastic Bricks", "Test Bricks", "Utility Bricks", "The Fugu Module", "Scaffold", "Neural Network", "Neuron", "Synapse", "Simulators", "Export Utilities", "Utilities", "Miscellaneous Utilities", "Fugu", "examples", "Fugu Neural Networks"], "terms": {"": [0, 14, 17, 23, 28, 31, 33], "design": [0, 21, 31], "mean": [0, 17], "ar": [0, 8, 17, 20, 21, 23, 31, 33], "sever": 0, "wai": [0, 8, 31], "add": [0, 14, 21, 23], "new": [0, 11], "compon": [0, 33], "e": [0, 18, 21, 31], "g": 0, "brick": [0, 3, 8, 10, 11, 22, 23, 28, 31, 33], "backend": [0, 17, 20, 22, 23, 31], "over": 0, "time": [0, 8, 10, 11, 17, 21, 28, 31, 33], "featur": [0, 20, 31], "ad": [0, 31], "itself": [0, 33], "we": [0, 17, 21, 31, 33], "expect": [0, 13, 15, 17, 18, 19, 20, 21], "onli": [0, 17, 18, 19, 21, 31, 33], "includ": [0, 12, 14, 17, 31, 33], "base": [0, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 31, 33], "collect": [0, 18], "For": [0, 17, 19, 31, 33], "those": [0, 20], "want": [0, 17, 21], "build": [0, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 31], "extens": [0, 31], "suggest": 0, "extend": 0, "relev": 0, "class": [0, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23], "releas": 0, "separ": 0, "packag": 0, "most": [0, 31, 33], "like": [0, 17, 31], "i": [0, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 28, 30, 31, 33], "requir": [0, 11, 17, 19, 31], "verison": 0, "setup": [0, 31], "py": 0, "As": [0, 33], "an": [0, 14, 15, 17, 18, 19, 20, 21, 23, 31], "exampl": [0, 8, 17, 21], "suppos": [0, 17], "someon": 0, "creat": [0, 8, 10, 11, 17, 31], "focus": 0, "signal": [0, 21], "process": [0, 12, 14, 19, 21, 31], "The": [0, 17, 18, 21, 31, 33], "develop": [0, 31, 33], "need": [0, 17], "instal": 0, "should": [0, 13, 15, 17, 19, 20, 21, 31, 33], "code": [0, 12, 13, 14, 15, 17, 18, 19, 20, 21, 31], "thei": [0, 8], "can": [0, 15, 18, 21, 23, 28], "call": [0, 21, 33], "signalbrick": 0, "cite": [0, 31], "depend": [0, 21], "user": 0, "who": 0, "interest": [0, 31], "thi": [0, 8, 13, 14, 15, 17, 18, 19, 20, 21, 28, 31, 33], "automat": 0, "altern": 0, "follow": [0, 31, 33], "end": [0, 19], "result": [0, 17, 28], "same": [0, 17], "would": [0, 31], "import": 0, "modul": [0, 31], "from": [0, 12, 14, 17, 18, 19, 21, 31, 33], "work": [0, 31], "interchang": 0, "hope": [0, 31], "well": [0, 33], "adopt": 0, "incorpor": [0, 8], "advantag": [0, 31], "method": [0, 8, 12, 14, 17], "contributor": [0, 31], "without": [0, 31], "ani": [0, 12, 14, 19, 20, 21, 23, 31, 33], "burden": 0, "still": 0, "contain": [0, 12, 13, 14, 15, 17, 18, 19, 20, 21, 28, 33], "uses": 0, "set": [0, 8, 10, 11, 17, 18, 20], "download": 0, "us": [0, 8, 12, 13, 14, 15, 17, 19, 20, 21, 23, 28, 30, 31, 33], "disadvantag": 0, "It": [0, 33], "mai": [0, 21, 31, 33], "difficult": 0, "find": 0, "what": [0, 31], "avail": [0, 31, 33], "keep": 0, "track": 0, "which": [0, 17, 21, 31], "sourc": [0, 15, 17, 31], "potenti": [0, 17, 33], "version": [0, 14, 15, 17, 19, 20, 21], "challeng": 0, "In": [0, 17, 31, 33], "futur": 0, "investig": 0, "overcom": 0, "librari": [0, 31], "contrib": 0, "extra": 0, "adder": [3, 16, 21, 22, 31], "fugu": [3, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 28, 30], "test": [3, 16, 22, 31], "max": [3, 18, 20], "threshold": [3, 17, 19, 21, 33], "vector": [3, 17, 21, 33], "abc": [8, 14], "abstract": [8, 14, 17, 31], "compil": [8, 10, 11], "scaffold": [8, 10, 11, 17, 22, 28, 31, 33], "compile_arg": [8, 10, 11], "neuron": [8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 27, 28, 30, 31], "popul": [8, 10, 11], "synaps": [8, 10, 11, 17, 22, 27, 31], "run": [8, 10, 11, 33], "n_step": [8, 10, 11], "10": [8, 10, 11], "return_potenti": [8, 10, 11], "fals": [8, 10, 11, 15, 17, 18, 23], "circuit": [8, 10, 11, 17, 30, 31, 33], "return": [8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 30], "data": [8, 10, 11, 17, 31, 33], "cleanup": [8, 10, 11], "delet": [8, 10, 11], "free": [8, 10, 11], "reset": [8, 10, 11, 33], "step": [8, 10, 11, 19, 21, 33], "0": [8, 10, 11, 12, 14, 17, 18, 19, 21, 23, 33], "properti": [8, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 28, 31, 33], "set_properti": [8, 10, 11, 14, 15, 17, 19, 20, 21], "specif": [8, 10, 11, 17, 21, 31, 33], "param": [8, 10, 11, 15, 17, 18, 19, 20, 21, 23], "dictionari": [8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 30], "paramet": [8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 28, 30], "neuron_prop": 8, "synapse_prop": 8, "self": [8, 12, 13, 15, 18, 19, 21], "get_chang": 8, "note": [8, 17, 33], "current": [8, 17, 19, 20, 21, 33], "function": [8, 12, 14, 30, 31, 33], "behav": 8, "differ": [8, 18, 31], "input": [8, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 30, 31], "instead": 8, "chang": 8, "intern": [8, 31, 33], "iter": 8, "becaus": 8, "how": [8, 17], "initi": [8, 11, 30], "spike": [8, 11, 17, 19, 21, 28, 30, 31, 33], "calcul": [8, 13, 18], "said": 8, "have": [8, 17, 20, 21, 31, 33], "yet": 8, "found": 8, "my": 8, "propos": 8, "abov": [8, 31, 33], "set_input_spik": [8, 10, 11], "loihi": [9, 22, 31], "snn": [9, 22, 23, 31], "loihi_backend": 10, "setcoreid": 10, "p": [10, 17, 19, 33], "type": [10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 33], "dict": [10, 12, 13, 15, 17, 18, 19, 20, 21], "snn_backend": 11, "simul": [11, 22, 31, 33], "none": [11, 12, 14, 15, 17, 18, 19, 21, 23, 28], "rais": [11, 18, 19, 20, 21, 23, 30], "error": [11, 21], "bool": [11, 23], "true": [11, 17, 23], "d": [11, 17, 21], "format": [11, 12, 13, 15, 17, 18, 19, 20, 21, 28], "converst": 11, "name": [11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 28, 30, 31, 33], "number": [11, 13, 17, 19, 20, 21, 23], "datafram": [11, 28], "get": [11, 14, 17], "adder_brick": 12, "streaming_add": 12, "stream": [12, 17], "brad": 12, "aimon": [12, 31], "jbaimon": 12, "sandia": [12, 31], "gov": [12, 31], "graph": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 28, 31, 33], "dimension": 12, "control_nod": [12, 13, 14, 15, 17, 18, 19, 20, 21], "input_list": [12, 13, 14, 15, 17, 18, 19, 20, 21], "input_cod": [12, 13, 14, 15, 17, 18, 19, 20, 21], "networkx": [12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 28, 31], "defin": [12, 13, 14, 15, 17, 18, 19, 20, 21, 33], "connect": [12, 13, 15, 17, 18, 19, 20, 21, 33], "comput": [12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 31, 33], "shape": [12, 13, 14, 15, 17, 18, 19, 20, 21, 23], "list": [12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 31, 33], "auxillari": [12, 13, 14, 15, 17, 18, 19, 20, 21], "node": [12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 28, 33], "excpect": 12, "kei": [12, 13, 14, 15, 17, 18, 19, 20, 21, 28, 30, 33], "complet": [12, 13, 14, 15, 17, 18, 19, 20, 21], "A": [12, 13, 14, 15, 17, 18, 19, 20, 21, 33], "fire": [12, 13, 14, 15, 17, 18, 19, 20, 21, 31, 33], "when": [12, 13, 14, 15, 17, 18, 19, 20, 21, 30], "done": [12, 13, 14, 15, 17, 18, 19, 20, 21], "element": [12, 13, 15, 17, 18, 19, 20, 21], "output": [12, 13, 15, 17, 18, 19, 20, 21, 23], "layer": [12, 13, 15, 17, 18, 19, 20, 21, 30], "depth": [12, 13, 15, 17, 18, 19, 20, 21], "etc": [12, 13, 15, 17, 18, 19, 20, 21], "control": [12, 13, 15, 17, 18, 19, 20, 21], "output_list": [12, 13, 15, 17, 18, 19, 20, 21], "output_cod": [12, 13, 15, 17, 18, 19, 21], "temporal_shift": 12, "shift_length": 12, "1": [12, 17, 18, 19, 21, 23, 33], "tempor": [12, 13, 14, 15, 19, 21], "shift": 12, "bit": [12, 17, 21], "streaming_scalar_multipli": 12, "scalar": 12, "multipli": 12, "alpha": 12, "125": 12, "must": [12, 14, 17, 31, 33], "inherit": [12, 14, 17, 19, 21], "metadata": [12, 13, 14, 15, 17, 18, 19, 20, 21, 23], "accept": [12, 14], "begin": [12, 13, 14, 18, 19, 21], "string": [12, 14, 23, 33], "application_brick": 13, "li": 13, "sequence_length": 13, "l": [13, 15, 19, 21], "length": 13, "longest": 13, "common": [13, 31], "subsequ": 13, "given": [13, 15, 33], "sequenc": 13, "construtor": [13, 15, 17, 19, 20, 21], "arg": [13, 17], "size": 13, "If": [13, 15, 17, 19, 20, 21, 31, 33], "specifi": [13, 15, 17, 19, 20, 21, 23], "default": [13, 14, 15, 17, 19, 20, 21, 23, 28], "uniqu": [13, 14, 15, 17, 19, 20, 21], "all": [13, 15, 17, 18, 19, 21, 23, 33], "support": [13, 15, 17, 18, 19, 20, 21, 33], "generate_brick_tag": 14, "brick_nam": 14, "gener": [14, 17, 19, 33], "tag": 14, "definit": [14, 33], "brick_id": 14, "6": 14, "generate_neuron_nam": 14, "neuron_nam": [14, 30], "brick_tag": 14, "updat": [14, 15, 17, 19, 20, 21], "valu": [14, 15, 17, 18, 19, 20, 21, 23, 28, 33], "pass": [14, 15, 17, 19, 20, 21], "inputbrick": [14, 17], "handl": [14, 17, 19, 21, 23], "get_input_valu": [14, 17], "t": [14, 17, 33], "implement": [14, 17], "compoundbrick": [14, 15, 18, 20], "other": [14, 31, 33], "build_child": 14, "graph_brick": 15, "simplegraphtravers": 15, "target_graph": 15, "target_nod": 15, "store_parent_info": 15, "travers": 15, "breadth": 15, "first": [15, 17, 18, 19, 21, 33], "search": [15, 31], "start": [15, 31], "vertex": 15, "also": [15, 18, 31, 33], "solv": [15, 17], "singl": [15, 17, 21], "shortest": [15, 17], "path": [15, 17, 23], "edg": [15, 17, 20, 21, 33], "delai": [15, 17, 33], "predecessor": 15, "parent": 15, "inform": [15, 17, 23, 33], "through": 15, "refer": [15, 21], "digraph": [15, 23], "object": [15, 17, 23, 33], "repres": [15, 17], "target": 15, "ha": [15, 17, 21, 31], "weight": [15, 17, 20, 21, 33], "problem": [15, 17], "registergraphtravers": 15, "flowaugmentingpath": 15, "flow_graph": 15, "flow": 15, "augment": 15, "ali": 15, "kwisthout": 15, "2019": [15, 31], "applic": [16, 22, 31], "regist": [16, 19, 22, 31], "stochast": [16, 22, 31], "util": [16, 22, 31], "input_brick": 17, "inputsourc": 17, "variou": 17, "rubric": 17, "convert": [17, 33], "dvi": 17, "camera": 17, "tell": 17, "accomplish": 17, "argument": 17, "you": [17, 21, 31], "whatev": 17, "wa": 17, "motion": 17, "detector": 17, "hardwar": 17, "usb": 17, "everytim": 17, "movement": 17, "detect": 17, "Then": 17, "might": [17, 21], "look": 17, "someth": 17, "add_nod": [17, 20], "sensor": 17, "decai": [17, 19, 20, 21, 33], "device_typ": 17, "device_nam": 17, "device_id": 17, "00": 17, "07": 17, "add_edg": [17, 20], "some_other_neuron": 17, "2": [17, 21, 33], "network": [17, 22, 27, 31], "port": 17, "receiv": [17, 18, 21], "tcp": 17, "packet": 17, "flag": [17, 23], "tcpporta": 17, "tcp_port": 17, "20": 17, "flag_bit_id": 17, "flag_fire_valu": 17, "tcpportb": 17, "3": [17, 21, 33], "tcpportc": 17, "7": 17, "vector_input": 17, "time_dimens": 17, "undefin": [17, 18, 19, 20, 21], "batchabl": 17, "vectorinput": 17, "arrai": 17, "numpi": [17, 31], "dimes": 17, "dimens": 17, "static": 17, "mode": [17, 21], "str": [17, 19, 20, 21], "next": 17, "output_shap": 17, "complete_nod": [17, 21], "begin_nod": 17, "basep_input": 17, "8": 17, "collapse_binari": 17, "basepinput": 17, "encod": [17, 18], "By": 17, "so": [17, 21], "particular": [17, 31], "case": [17, 31, 33], "where": [17, 31, 33], "correspond": 17, "binari": [17, 18, 21, 31], "describ": [17, 31, 33], "below": [17, 31, 33], "now": 17, "non": [17, 18], "neg": [17, 18, 33], "integ": [17, 18, 33], "here": [17, 31], "some": [17, 31], "x": [17, 18], "222": 17, "5": [17, 18, 19, 20], "4": [17, 21], "unari": [17, 19], "entri": [17, 21], "factor": [17, 31], "space": 17, "n": [17, 20, 33], "configur": 17, "becom": [17, 31], "option": [17, 28], "remov": 17, "one": [17, 33], "axi": 17, "redund": 17, "map": 17, "last": 17, "our": 17, "lastli": 17, "allow": [17, 21, 31], "treat": 17, "index": [17, 21, 31], "behavior": 17, "deliv": 17, "timestep": [17, 19, 21, 30], "each": [17, 20, 33], "slice": 17, "preserv": 17, "ndarrai": 17, "int": [17, 19, 20, 21, 23, 33], "boolean": 17, "collaps": 17, "dim": 17, "register_brick": 18, "max_siz": 18, "initial_valu": 18, "register_label": 18, "single_set": 18, "store": 18, "provid": [18, 19, 21, 31, 33], "simpl": [18, 21, 28], "recal": 18, "clear": 18, "default_s": 18, "maximum": 18, "addit": [18, 28, 31, 33], "register_s": 18, "sum": [18, 20], "two": [18, 33], "valueerror": [18, 19, 20, 21, 23, 30], "too": 18, "mani": [18, 31], "subtract": 18, "second": [18, 33], "y": 18, "stochastic_brick": 19, "prn": 19, "probabl": [19, 33], "psuedo": 19, "random": [19, 33], "randomli": 19, "uniform": 19, "draw": [19, 33], "compar": 19, "against": [19, 21], "constructor": 19, "produc": 19, "un": 19, "desir": 19, "least": [19, 33], "float": [19, 33], "exceed": 19, "forc": 19, "new_complete_nod": 19, "These": [20, 31], "capabl": 20, "test_brick": 20, "instantdecai": 20, "num_input": 20, "instant": 20, "dot": [20, 21], "raster": [20, 21], "complete_nam": [20, 21], "main_nam": 20, "synapseproperti": 20, "sumofmax": 20, "set_siz": 20, "report": 20, "child_output": 20, "unexpect": 20, "amount": 20, "utility_brick": 21, "copi": 21, "concaten": 21, "multipl": 21, "except": [21, 30], "match": 21, "and_or": 21, "AND": [21, 31], "perform": 21, "logic": 21, "OR": [21, 31], "oper": [21, 31], "wise": 21, "either": [21, 30], "And": 21, "Or": 21, "determin": [21, 30, 33], "just": 21, "put": 21, "basic": 21, "relai": 21, "its": [21, 31, 33], "reason": 21, "fill": 21, "execut": 21, "platform": [21, 31], "addition": [21, 31], "field": [21, 28, 31], "local": [21, 33], "posit": [21, 31], "downstream": 21, "represent": 21, "indic": [21, 23], "unsupport": 21, "paritycheck": 21, "pariti": 21, "after": 21, "odd": 21, "hidden": 21, "sinc": 21, "negat": 21, "via": 21, "incom": 21, "temporaladd": 21, "number_of_el": 21, "togeth": 21, "more": 21, "consid": 21, "three": 21, "u": [21, 31], "v": 21, "w": 21, "t_u": 21, "t_v": 21, "t_w": 21, "assum": [21, 33], "befor": 21, "complete_node_list": 21, "output_co": 21, "incorrect": 21, "neural": [22, 27, 31], "export": [22, 29, 31], "miscellan": [22, 29, 31], "supported_backend": 23, "ds_legaci": 23, "snn_legaci": 23, "pynn": 23, "add_brick": 23, "brick_funct": 23, "input_nod": 23, "obj": 23, "dimesion": 23, "alreadi": 23, "resolve_tim": 23, "get_weight": 23, "all_nodes_built": 23, "verbos": 23, "check": 23, "built": [23, 31], "messag": 23, "fase": 23, "otherwis": [23, 31], "b": [23, 31], "all_in_neighbors_built": 23, "neighbor": 23, "whose": 23, "built_graph": 23, "lay_brick": [23, 33], "level": [23, 31], "summari": 23, "displai": 23, "print": 23, "about": 23, "export_util": 28, "results_df_from_dict": 28, "results_dictionari": 28, "fill_results_from_graph": 28, "results_df": 28, "neuron_numb": 28, "get_spiked_info": 28, "results_dict": 28, "set_circuit_posit": 28, "set_posit": 28, "generate_gexf": 28, "filenam": 28, "gexf": 28, "file": 28, "exchang": 28, "xml": 28, "larg": 28, "wrapper": 28, "around": 28, "write_gexf": 28, "state": [28, 33], "embed": 28, "panda": [28, 31], "misc": 30, "calculatespiketim": 30, "main_kei": 30, "whether": [30, 31], "certain": [30, 31], "copyright": 31, "2022": 31, "nation": 31, "technologi": 31, "engin": 31, "solut": 31, "llc": 31, "ntess": 31, "under": 31, "term": 31, "contract": 31, "de": 31, "na0003525": 31, "govern": 31, "retain": 31, "right": 31, "softwar": 31, "redistribut": 31, "form": 31, "modif": 31, "permit": 31, "condit": 31, "met": 31, "notic": 31, "disclaim": 31, "reproduc": 31, "materi": 31, "distribut": 31, "neither": 31, "holder": 31, "nor": 31, "endors": 31, "promot": 31, "product": 31, "deriv": 31, "prior": [31, 33], "written": 31, "permiss": 31, "BY": 31, "THE": 31, "AS": 31, "express": 31, "impli": 31, "warranti": 31, "BUT": 31, "NOT": 31, "limit": 31, "TO": 31, "OF": 31, "merchant": 31, "fit": 31, "FOR": 31, "purpos": 31, "IN": 31, "NO": 31, "event": 31, "shall": 31, "BE": 31, "liabl": 31, "direct": 31, "indirect": 31, "incident": 31, "special": 31, "exemplari": 31, "consequenti": 31, "damag": 31, "procur": 31, "substitut": 31, "good": 31, "servic": 31, "loss": 31, "profit": 31, "busi": 31, "interrupt": 31, "howev": 31, "caus": 31, "ON": 31, "theori": 31, "liabil": 31, "strict": 31, "tort": 31, "neglig": 31, "aris": 31, "out": 31, "even": 31, "IF": 31, "advis": 31, "possibl": 31, "SUCH": 31, "python": 31, "high": 31, "framework": 31, "accordingli": 31, "leaki": [31, 33], "integr": [31, 33], "lif": 31, "model": 31, "core": 31, "foundat": 31, "combin": 31, "compos": 31, "construct": [31, 33], "larger": 31, "nmc": 31, "architectur": 31, "rather": 31, "than": [31, 33], "composition": 31, "concept": 31, "facilit": 31, "hierarch": 31, "approach": 31, "enabl": 31, "pre": [31, 33], "post": [31, 33], "overarch": 31, "Such": 31, "help": 31, "explor": 31, "parameter": 31, "scale": 31, "offer": 31, "analyz": 31, "algorithm": [31, 33], "kernel": 31, "sort": 31, "optim": 31, "analyt": 31, "identifi": 31, "region": 31, "exist": 31, "account": 31, "open": 31, "availbl": 31, "github": 31, "http": 31, "com": 31, "snl": 31, "nerl": 31, "full": 31, "txt": 31, "jupyt": 31, "matplotlib": 31, "pip": 31, "git": 31, "clone": 31, "cd": 31, "r": 31, "upgrad": 31, "few": 31, "place": 31, "folder": 31, "tree": 31, "main": 31, "explain": 31, "link": 31, "tool": 31, "neuromorph": 31, "while": 31, "team": 31, "small": 31, "alwai": 31, "question": 31, "pleas": 31, "mail": 31, "wg": 31, "welcom": 31, "issu": 31, "discuss": 31, "incopor": 31, "see": [31, 33], "io": 31, "html": 31, "your": 31, "research": 31, "paper": 31, "jame": 31, "william": 31, "severa": 31, "craig": 31, "m": 31, "vineyard": 31, "proceed": 31, "confer": 31, "system": 31, "page": 31, "To": 33, "prepar": 33, "assembl": 33, "thought": 33, "analag": 33, "within": 33, "between": 33, "circuitri": 33, "until": 33, "At": 33, "evalu": 33, "torch": 33, "tensor": 33, "upon": 33, "standard": 33, "variabl": 33, "descript": 33, "x_i": 33, "t_i": 33, "constant": 33, "m_i": 33, "p_i": 33, "record": 33, "x_": 33, "i_i": 33, "w_": 33, "s_": 33, "everi": 33, "histori": 33, "previou": 33, "stimul": 33, "greater": 33, "doe": 33, "absenc": 33, "remain": 33, "suffici": 33, "pull": 33, "determinist": 33, "thu": 33, "far": 33, "example_brick_build": 33, "ipynb": 33, "scenario": 33, "act": 33, "translat": 33, "domain": 33, "point": 33, "pair": 33, "synapt": 33, "being": 33, "character": 33, "transmiss": 33, "inf": 33, "discret": 33, "therefor": 33, "take": 33, "inhibitori": 33}, "objects": {"": [[7, 0, 0, "-", "fugu"]], "fugu.backends": [[8, 0, 0, "-", "backend"], [10, 0, 0, "-", "loihi_backend"], [11, 0, 0, "-", "snn_backend"]], "fugu.backends.backend": [[8, 1, 1, "", "Backend"]], "fugu.backends.backend.Backend": [[8, 2, 1, "", "cleanup"], [8, 2, 1, "", "compile"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "run"], [8, 2, 1, "", "set_input_spikes"], [8, 2, 1, "", "set_properties"]], "fugu.backends.loihi_backend": [[10, 1, 1, "", "loihi_Backend"]], "fugu.backends.loihi_backend.loihi_Backend": [[10, 2, 1, "", "cleanup"], [10, 2, 1, "", "compile"], [10, 2, 1, "", "reset"], [10, 2, 1, "", "run"], [10, 2, 1, "", "setCoreID"], [10, 2, 1, "", "set_input_spikes"], [10, 2, 1, "", "set_properties"]], "fugu.backends.snn_backend": [[11, 1, 1, "", "snn_Backend"]], "fugu.backends.snn_backend.snn_Backend": [[11, 2, 1, "", "cleanup"], [11, 2, 1, "", "compile"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "run"], [11, 2, 1, "", "set_input_spikes"], [11, 2, 1, "", "set_properties"]], "fugu.bricks": [[12, 0, 0, "-", "adder_bricks"], [13, 0, 0, "-", "application_bricks"], [14, 0, 0, "-", "bricks"], [15, 0, 0, "-", "graph_bricks"], [17, 0, 0, "-", "input_bricks"], [18, 0, 0, "-", "register_bricks"], [19, 0, 0, "-", "stochastic_bricks"], [20, 0, 0, "-", "test_bricks"], [21, 0, 0, "-", "utility_bricks"]], "fugu.bricks.adder_bricks": [[12, 1, 1, "id0", "streaming_adder"], [12, 1, 1, "", "streaming_scalar_multiplier"], [12, 1, 1, "id2", "temporal_shift"]], "fugu.bricks.adder_bricks.streaming_adder": [[12, 2, 1, "id1", "build"]], "fugu.bricks.adder_bricks.streaming_scalar_multiplier": [[12, 2, 1, "", "build"]], "fugu.bricks.adder_bricks.temporal_shift": [[12, 2, 1, "id3", "build"]], "fugu.bricks.application_bricks": [[13, 1, 1, "", "LIS"]], "fugu.bricks.application_bricks.LIS": [[13, 2, 1, "", "build"]], "fugu.bricks.bricks": [[14, 1, 1, "", "Brick"], [14, 1, 1, "", "CompoundBrick"], [14, 1, 1, "", "InputBrick"], [14, 1, 1, "id0", "generate_brick_tag"]], "fugu.bricks.bricks.Brick": [[14, 3, 1, "", "brick_id"], [14, 2, 1, "", "build"], [14, 2, 1, "", "generate_neuron_name"], [14, 2, 1, "", "set_properties"]], "fugu.bricks.bricks.CompoundBrick": [[14, 3, 1, "", "brick_id"], [14, 2, 1, "", "build"], [14, 2, 1, "", "build_child"], [14, 2, 1, "", "set_properties"]], "fugu.bricks.bricks.InputBrick": [[14, 2, 1, "", "get_input_value"], [14, 2, 1, "", "set_properties"]], "fugu.bricks.graph_bricks": [[15, 1, 1, "", "FlowAugmentingPath"], [15, 1, 1, "", "RegisterGraphTraversal"], [15, 1, 1, "", "SimpleGraphTraversal"]], "fugu.bricks.graph_bricks.FlowAugmentingPath": [[15, 2, 1, "", "build"], [15, 2, 1, "", "set_properties"]], "fugu.bricks.graph_bricks.RegisterGraphTraversal": [[15, 2, 1, "", "build"]], "fugu.bricks.graph_bricks.SimpleGraphTraversal": [[15, 2, 1, "", "build"]], "fugu.bricks.input_bricks": [[17, 1, 1, "", "BaseP_Input"], [17, 1, 1, "id0", "InputSource"], [17, 1, 1, "id2", "Vector_Input"]], "fugu.bricks.input_bricks.InputSource": [[17, 2, 1, "id1", "connect"]], "fugu.bricks.input_bricks.Vector_Input": [[17, 2, 1, "id6", "build"], [17, 2, 1, "id5", "get_input_value"], [17, 2, 1, "id3", "next"], [17, 2, 1, "id4", "set_properties"]], "fugu.bricks.register_bricks": [[18, 1, 1, "", "Addition"], [18, 1, 1, "", "Max"], [18, 1, 1, "", "Register"], [18, 1, 1, "", "Subtraction"]], "fugu.bricks.register_bricks.Addition": [[18, 2, 1, "", "build"]], "fugu.bricks.register_bricks.Max": [[18, 2, 1, "", "build"]], "fugu.bricks.register_bricks.Register": [[18, 2, 1, "", "build"]], "fugu.bricks.register_bricks.Subtraction": [[18, 2, 1, "", "build"]], "fugu.bricks.stochastic_bricks": [[19, 1, 1, "", "PRN"], [19, 1, 1, "", "Threshold"]], "fugu.bricks.stochastic_bricks.PRN": [[19, 2, 1, "", "build"]], "fugu.bricks.stochastic_bricks.Threshold": [[19, 2, 1, "", "build"], [19, 2, 1, "", "set_properties"]], "fugu.bricks.test_bricks": [[20, 1, 1, "", "InstantDecay"], [20, 1, 1, "", "SumOfMaxes"], [20, 1, 1, "", "SynapseProperties"]], "fugu.bricks.test_bricks.InstantDecay": [[20, 2, 1, "", "build"]], "fugu.bricks.test_bricks.SumOfMaxes": [[20, 2, 1, "", "build"]], "fugu.bricks.test_bricks.SynapseProperties": [[20, 2, 1, "", "build"], [20, 2, 1, "", "set_properties"]], "fugu.bricks.utility_bricks": [[21, 1, 1, "id5", "AND_OR"], [21, 1, 1, "id3", "Concatenate"], [21, 1, 1, "", "Copy"], [21, 1, 1, "id0", "Dot"], [21, 1, 1, "id7", "ParityCheck"], [21, 1, 1, "id9", "TemporalAdder"]], "fugu.bricks.utility_bricks.AND_OR": [[21, 2, 1, "id6", "build"]], "fugu.bricks.utility_bricks.Concatenate": [[21, 2, 1, "id4", "build"]], "fugu.bricks.utility_bricks.Copy": [[21, 2, 1, "", "build"]], "fugu.bricks.utility_bricks.Dot": [[21, 2, 1, "id2", "build"], [21, 2, 1, "id1", "set_properties"]], "fugu.bricks.utility_bricks.ParityCheck": [[21, 2, 1, "id8", "build"]], "fugu.bricks.utility_bricks.TemporalAdder": [[21, 2, 1, "id10", "build"]], "fugu.scaffold": [[23, 0, 0, "-", "scaffold"]], "fugu.scaffold.scaffold": [[23, 1, 1, "", "Scaffold"]], "fugu.scaffold.scaffold.Scaffold": [[23, 2, 1, "", "add_brick"], [23, 2, 1, "", "all_in_neighbors_built"], [23, 2, 1, "", "all_nodes_built"], [23, 2, 1, "", "get_weight"], [23, 2, 1, "", "lay_bricks"], [23, 2, 1, "", "resolve_timing"], [23, 2, 1, "", "summary"], [23, 3, 1, "", "supported_backends"]], "fugu.utils": [[28, 0, 0, "-", "export_utils"], [30, 0, 0, "-", "misc"]], "fugu.utils.export_utils": [[28, 4, 1, "", "fill_results_from_graph"], [28, 4, 1, "", "generate_gexf"], [28, 4, 1, "", "get_spiked_info"], [28, 4, 1, "", "results_df_from_dict"], [28, 4, 1, "", "results_dict"], [28, 4, 1, "", "set_circuit_position"], [28, 4, 1, "", "set_position"]], "fugu.utils.misc": [[30, 4, 1, "", "CalculateSpikeTimes"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"contribut": [0, 31], "fugu": [0, 2, 7, 9, 22, 31, 33], "adder": [1, 12], "exampl": [1, 3, 4, 5, 6, 31, 32], "test": [2, 20], "api": [3, 31], "max": 4, "threshold": 5, "brick": [5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "vector": 6, "packag": 7, "subpackag": 7, "modul": [7, 22], "content": 7, "backend": [8, 9, 10, 11], "loihi": 10, "snn": 11, "applic": 13, "graph": 15, "input": [17, 33], "regist": 18, "stochast": 19, "util": [21, 28, 29, 30], "The": 22, "scaffold": 23, "neural": [24, 33], "network": [24, 33], "neuron": [25, 33], "synaps": [26, 33], "simul": 27, "export": 28, "miscellan": 30, "overview": 31, "instal": 31, "depend": 31, "A": 31, "note": 31, "run": 31, "document": 31, "doc": 31, "collabor": 31, "indic": 31, "tabl": 31, "specifi": 33, "model": 33}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Contributing to Fugu": [[0, "contributing-to-fugu"]], "Adder Example": [[1, "adder-example"]], "Fugu Test": [[2, "fugu-test"]], "Examples API": [[3, "examples-api"]], "Max Example": [[4, "max-example"]], "Threshold Brick Example": [[5, "threshold-brick-example"]], "Vector Example": [[6, "vector-example"]], "fugu package": [[7, "fugu-package"]], "Subpackages": [[7, "subpackages"]], "Module contents": [[7, "module-fugu"]], "Backend": [[8, "module-fugu.backends.backend"]], "Fugu Backends": [[9, "fugu-backends"]], "Loihi Backend": [[10, "module-fugu.backends.loihi_backend"]], "SNN Backend": [[11, "module-fugu.backends.snn_backend"]], "Adder Bricks": [[12, "module-fugu.bricks.adder_bricks"]], "Application Bricks": [[13, "module-fugu.bricks.application_bricks"]], "Bricks": [[14, "module-fugu.bricks.bricks"], [16, "bricks"]], "Graph Bricks": [[15, "module-fugu.bricks.graph_bricks"]], "Input Bricks": [[17, "module-fugu.bricks.input_bricks"]], "Register Bricks": [[18, "module-fugu.bricks.register_bricks"]], "Stochastic Bricks": [[19, "module-fugu.bricks.stochastic_bricks"]], "Test Bricks": [[20, "module-fugu.bricks.test_bricks"]], "Utility Bricks": [[21, "module-fugu.bricks.utility_bricks"]], "The Fugu Module": [[22, "the-fugu-module"]], "Scaffold": [[23, "module-fugu.scaffold.scaffold"]], "Neural Network": [[24, "neural-network"]], "Neuron": [[25, "neuron"]], "Synapse": [[26, "synapse"]], "Simulators": [[27, "simulators"]], "Export Utilities": [[28, "module-fugu.utils.export_utils"]], "Utilities": [[29, "utilities"]], "Miscellaneous Utilities": [[30, "module-fugu.utils.misc"]], "Fugu": [[31, "fugu"]], "Overview": [[31, "overview"]], "Install": [[31, "install"]], "Dependencies": [[31, "dependencies"]], "A Note on Running Examples": [[31, "a-note-on-running-examples"]], "Documentation": [[31, "documentation"]], "API Docs": [[31, null]], "Collaborations and Contributing": [[31, "collaborations-and-contributing"]], "Indices and tables": [[31, "indices-and-tables"]], "examples": [[32, "examples"]], "Fugu Neural Networks": [[33, "fugu-neural-networks"]], "Specifying the network in Fugu": [[33, "specifying-the-network-in-fugu"]], "Neuron Model": [[33, "neuron-model"]], "Input Neurons": [[33, "input-neurons"]], "Synapses": [[33, "synapses"]]}, "indexentries": {"fugu": [[7, "module-fugu"]], "module": [[7, "module-fugu"], [8, "module-fugu.backends.backend"], [10, "module-fugu.backends.loihi_backend"], [11, "module-fugu.backends.snn_backend"], [12, "module-fugu.bricks.adder_bricks"], [13, "module-fugu.bricks.application_bricks"], [14, "module-fugu.bricks.bricks"], [15, "module-fugu.bricks.graph_bricks"], [17, "module-fugu.bricks.input_bricks"], [18, "module-fugu.bricks.register_bricks"], [19, "module-fugu.bricks.stochastic_bricks"], [20, "module-fugu.bricks.test_bricks"], [21, "module-fugu.bricks.utility_bricks"], [23, "module-fugu.scaffold.scaffold"], [28, "module-fugu.utils.export_utils"], [30, "module-fugu.utils.misc"]], "backend (class in fugu.backends.backend)": [[8, "fugu.backends.backend.Backend"]], "cleanup() (fugu.backends.backend.backend method)": [[8, "fugu.backends.backend.Backend.cleanup"]], "compile() (fugu.backends.backend.backend method)": [[8, "fugu.backends.backend.Backend.compile"]], "fugu.backends.backend": [[8, "module-fugu.backends.backend"]], "reset() (fugu.backends.backend.backend method)": [[8, "fugu.backends.backend.Backend.reset"]], "run() (fugu.backends.backend.backend method)": [[8, "fugu.backends.backend.Backend.run"]], "set_input_spikes() (fugu.backends.backend.backend method)": [[8, "fugu.backends.backend.Backend.set_input_spikes"]], "set_properties() (fugu.backends.backend.backend method)": [[8, "fugu.backends.backend.Backend.set_properties"]], "cleanup() (fugu.backends.loihi_backend.loihi_backend method)": [[10, "fugu.backends.loihi_backend.loihi_Backend.cleanup"]], "compile() (fugu.backends.loihi_backend.loihi_backend method)": [[10, "fugu.backends.loihi_backend.loihi_Backend.compile"]], "fugu.backends.loihi_backend": [[10, "module-fugu.backends.loihi_backend"]], "loihi_backend (class in fugu.backends.loihi_backend)": [[10, "fugu.backends.loihi_backend.loihi_Backend"]], "reset() (fugu.backends.loihi_backend.loihi_backend method)": [[10, "fugu.backends.loihi_backend.loihi_Backend.reset"]], "run() (fugu.backends.loihi_backend.loihi_backend method)": [[10, "fugu.backends.loihi_backend.loihi_Backend.run"]], "setcoreid() (fugu.backends.loihi_backend.loihi_backend method)": [[10, "fugu.backends.loihi_backend.loihi_Backend.setCoreID"]], "set_input_spikes() (fugu.backends.loihi_backend.loihi_backend method)": [[10, "fugu.backends.loihi_backend.loihi_Backend.set_input_spikes"]], "set_properties() (fugu.backends.loihi_backend.loihi_backend method)": [[10, "fugu.backends.loihi_backend.loihi_Backend.set_properties"]], "cleanup() (fugu.backends.snn_backend.snn_backend method)": [[11, "fugu.backends.snn_backend.snn_Backend.cleanup"]], "compile() (fugu.backends.snn_backend.snn_backend method)": [[11, "fugu.backends.snn_backend.snn_Backend.compile"]], "fugu.backends.snn_backend": [[11, "module-fugu.backends.snn_backend"]], "reset() (fugu.backends.snn_backend.snn_backend method)": [[11, "fugu.backends.snn_backend.snn_Backend.reset"]], "run() (fugu.backends.snn_backend.snn_backend method)": [[11, "fugu.backends.snn_backend.snn_Backend.run"]], "set_input_spikes() (fugu.backends.snn_backend.snn_backend method)": [[11, "fugu.backends.snn_backend.snn_Backend.set_input_spikes"]], "set_properties() (fugu.backends.snn_backend.snn_backend method)": [[11, "fugu.backends.snn_backend.snn_Backend.set_properties"]], "snn_backend (class in fugu.backends.snn_backend)": [[11, "fugu.backends.snn_backend.snn_Backend"]], "build() (fugu.bricks.adder_bricks.streaming_adder method)": [[12, "fugu.bricks.adder_bricks.streaming_adder.build"], [12, "id1"]], "build() (fugu.bricks.adder_bricks.streaming_scalar_multiplier method)": [[12, "fugu.bricks.adder_bricks.streaming_scalar_multiplier.build"]], "build() (fugu.bricks.adder_bricks.temporal_shift method)": [[12, "fugu.bricks.adder_bricks.temporal_shift.build"], [12, "id3"]], "fugu.bricks.adder_bricks": [[12, "module-fugu.bricks.adder_bricks"]], "streaming_adder (class in fugu.bricks.adder_bricks)": [[12, "fugu.bricks.adder_bricks.streaming_adder"], [12, "id0"]], "streaming_scalar_multiplier (class in fugu.bricks.adder_bricks)": [[12, "fugu.bricks.adder_bricks.streaming_scalar_multiplier"]], "temporal_shift (class in fugu.bricks.adder_bricks)": [[12, "fugu.bricks.adder_bricks.temporal_shift"], [12, "id2"]], "lis (class in fugu.bricks.application_bricks)": [[13, "fugu.bricks.application_bricks.LIS"]], "build() (fugu.bricks.application_bricks.lis method)": [[13, "fugu.bricks.application_bricks.LIS.build"]], "fugu.bricks.application_bricks": [[13, "module-fugu.bricks.application_bricks"]], "brick (class in fugu.bricks.bricks)": [[14, "fugu.bricks.bricks.Brick"]], "compoundbrick (class in fugu.bricks.bricks)": [[14, "fugu.bricks.bricks.CompoundBrick"]], "inputbrick (class in fugu.bricks.bricks)": [[14, "fugu.bricks.bricks.InputBrick"]], "brick_id (fugu.bricks.bricks.brick attribute)": [[14, "fugu.bricks.bricks.Brick.brick_id"]], "brick_id (fugu.bricks.bricks.compoundbrick attribute)": [[14, "fugu.bricks.bricks.CompoundBrick.brick_id"]], "build() (fugu.bricks.bricks.brick method)": [[14, "fugu.bricks.bricks.Brick.build"]], "build() (fugu.bricks.bricks.compoundbrick method)": [[14, "fugu.bricks.bricks.CompoundBrick.build"]], "build_child() (fugu.bricks.bricks.compoundbrick method)": [[14, "fugu.bricks.bricks.CompoundBrick.build_child"]], "fugu.bricks.bricks": [[14, "module-fugu.bricks.bricks"]], "generate_brick_tag (class in fugu.bricks.bricks)": [[14, "id0"]], "generate_brick_tag() (in module fugu.bricks.bricks)": [[14, "fugu.bricks.bricks.generate_brick_tag"]], "generate_neuron_name() (fugu.bricks.bricks.brick method)": [[14, "fugu.bricks.bricks.Brick.generate_neuron_name"]], "get_input_value() (fugu.bricks.bricks.inputbrick method)": [[14, "fugu.bricks.bricks.InputBrick.get_input_value"]], "set_properties() (fugu.bricks.bricks.brick method)": [[14, "fugu.bricks.bricks.Brick.set_properties"]], "set_properties() (fugu.bricks.bricks.compoundbrick method)": [[14, "fugu.bricks.bricks.CompoundBrick.set_properties"]], "set_properties() (fugu.bricks.bricks.inputbrick method)": [[14, "fugu.bricks.bricks.InputBrick.set_properties"]], "flowaugmentingpath (class in fugu.bricks.graph_bricks)": [[15, "fugu.bricks.graph_bricks.FlowAugmentingPath"]], "registergraphtraversal (class in fugu.bricks.graph_bricks)": [[15, "fugu.bricks.graph_bricks.RegisterGraphTraversal"]], "simplegraphtraversal (class in fugu.bricks.graph_bricks)": [[15, "fugu.bricks.graph_bricks.SimpleGraphTraversal"]], "build() (fugu.bricks.graph_bricks.flowaugmentingpath method)": [[15, "fugu.bricks.graph_bricks.FlowAugmentingPath.build"]], "build() (fugu.bricks.graph_bricks.registergraphtraversal method)": [[15, "fugu.bricks.graph_bricks.RegisterGraphTraversal.build"]], "build() (fugu.bricks.graph_bricks.simplegraphtraversal method)": [[15, "fugu.bricks.graph_bricks.SimpleGraphTraversal.build"]], "fugu.bricks.graph_bricks": [[15, "module-fugu.bricks.graph_bricks"]], "set_properties() (fugu.bricks.graph_bricks.flowaugmentingpath method)": [[15, "fugu.bricks.graph_bricks.FlowAugmentingPath.set_properties"]], "basep_input (class in fugu.bricks.input_bricks)": [[17, "fugu.bricks.input_bricks.BaseP_Input"]], "inputsource (class in fugu.bricks.input_bricks)": [[17, "fugu.bricks.input_bricks.InputSource"], [17, "id0"]], "vector_input (class in fugu.bricks.input_bricks)": [[17, "fugu.bricks.input_bricks.Vector_Input"], [17, "id2"]], "build() (fugu.bricks.input_bricks.vector_input method)": [[17, "fugu.bricks.input_bricks.Vector_Input.build"], [17, "id6"]], "connect() (fugu.bricks.input_bricks.inputsource method)": [[17, "fugu.bricks.input_bricks.InputSource.connect"], [17, "id1"]], "fugu.bricks.input_bricks": [[17, "module-fugu.bricks.input_bricks"]], "get_input_value() (fugu.bricks.input_bricks.vector_input method)": [[17, "fugu.bricks.input_bricks.Vector_Input.get_input_value"], [17, "id5"]], "next() (fugu.bricks.input_bricks.vector_input method)": [[17, "fugu.bricks.input_bricks.Vector_Input.next"], [17, "id3"]], "set_properties() (fugu.bricks.input_bricks.vector_input method)": [[17, "fugu.bricks.input_bricks.Vector_Input.set_properties"], [17, "id4"]], "addition (class in fugu.bricks.register_bricks)": [[18, "fugu.bricks.register_bricks.Addition"]], "max (class in fugu.bricks.register_bricks)": [[18, "fugu.bricks.register_bricks.Max"]], "register (class in fugu.bricks.register_bricks)": [[18, "fugu.bricks.register_bricks.Register"]], "subtraction (class in fugu.bricks.register_bricks)": [[18, "fugu.bricks.register_bricks.Subtraction"]], "build() (fugu.bricks.register_bricks.addition method)": [[18, "fugu.bricks.register_bricks.Addition.build"]], "build() (fugu.bricks.register_bricks.max method)": [[18, "fugu.bricks.register_bricks.Max.build"]], "build() (fugu.bricks.register_bricks.register method)": [[18, "fugu.bricks.register_bricks.Register.build"]], "build() (fugu.bricks.register_bricks.subtraction method)": [[18, "fugu.bricks.register_bricks.Subtraction.build"]], "fugu.bricks.register_bricks": [[18, "module-fugu.bricks.register_bricks"]], "prn (class in fugu.bricks.stochastic_bricks)": [[19, "fugu.bricks.stochastic_bricks.PRN"]], "threshold (class in fugu.bricks.stochastic_bricks)": [[19, "fugu.bricks.stochastic_bricks.Threshold"]], "build() (fugu.bricks.stochastic_bricks.prn method)": [[19, "fugu.bricks.stochastic_bricks.PRN.build"]], "build() (fugu.bricks.stochastic_bricks.threshold method)": [[19, "fugu.bricks.stochastic_bricks.Threshold.build"]], "fugu.bricks.stochastic_bricks": [[19, "module-fugu.bricks.stochastic_bricks"]], "set_properties() (fugu.bricks.stochastic_bricks.threshold method)": [[19, "fugu.bricks.stochastic_bricks.Threshold.set_properties"]], "instantdecay (class in fugu.bricks.test_bricks)": [[20, "fugu.bricks.test_bricks.InstantDecay"]], "sumofmaxes (class in fugu.bricks.test_bricks)": [[20, "fugu.bricks.test_bricks.SumOfMaxes"]], "synapseproperties (class in fugu.bricks.test_bricks)": [[20, "fugu.bricks.test_bricks.SynapseProperties"]], "build() (fugu.bricks.test_bricks.instantdecay method)": [[20, "fugu.bricks.test_bricks.InstantDecay.build"]], "build() (fugu.bricks.test_bricks.sumofmaxes method)": [[20, "fugu.bricks.test_bricks.SumOfMaxes.build"]], "build() (fugu.bricks.test_bricks.synapseproperties method)": [[20, "fugu.bricks.test_bricks.SynapseProperties.build"]], "fugu.bricks.test_bricks": [[20, "module-fugu.bricks.test_bricks"]], "set_properties() (fugu.bricks.test_bricks.synapseproperties method)": [[20, "fugu.bricks.test_bricks.SynapseProperties.set_properties"]], "and_or (class in fugu.bricks.utility_bricks)": [[21, "fugu.bricks.utility_bricks.AND_OR"], [21, "id5"]], "concatenate (class in fugu.bricks.utility_bricks)": [[21, "fugu.bricks.utility_bricks.Concatenate"], [21, "id3"]], "copy (class in fugu.bricks.utility_bricks)": [[21, "fugu.bricks.utility_bricks.Copy"]], "dot (class in fugu.bricks.utility_bricks)": [[21, "fugu.bricks.utility_bricks.Dot"], [21, "id0"]], "paritycheck (class in fugu.bricks.utility_bricks)": [[21, "fugu.bricks.utility_bricks.ParityCheck"], [21, "id7"]], "temporaladder (class in fugu.bricks.utility_bricks)": [[21, "fugu.bricks.utility_bricks.TemporalAdder"], [21, "id9"]], "build() (fugu.bricks.utility_bricks.and_or method)": [[21, "fugu.bricks.utility_bricks.AND_OR.build"], [21, "id6"]], "build() (fugu.bricks.utility_bricks.concatenate method)": [[21, "fugu.bricks.utility_bricks.Concatenate.build"], [21, "id4"]], "build() (fugu.bricks.utility_bricks.copy method)": [[21, "fugu.bricks.utility_bricks.Copy.build"]], "build() (fugu.bricks.utility_bricks.dot method)": [[21, "fugu.bricks.utility_bricks.Dot.build"], [21, "id2"]], "build() (fugu.bricks.utility_bricks.paritycheck method)": [[21, "fugu.bricks.utility_bricks.ParityCheck.build"], [21, "id8"]], "build() (fugu.bricks.utility_bricks.temporaladder method)": [[21, "fugu.bricks.utility_bricks.TemporalAdder.build"], [21, "id10"]], "fugu.bricks.utility_bricks": [[21, "module-fugu.bricks.utility_bricks"]], "set_properties() (fugu.bricks.utility_bricks.dot method)": [[21, "fugu.bricks.utility_bricks.Dot.set_properties"], [21, "id1"]], "scaffold (class in fugu.scaffold.scaffold)": [[23, "fugu.scaffold.scaffold.Scaffold"]], "add_brick() (fugu.scaffold.scaffold.scaffold method)": [[23, "fugu.scaffold.scaffold.Scaffold.add_brick"]], "all_in_neighbors_built() (fugu.scaffold.scaffold.scaffold method)": [[23, "fugu.scaffold.scaffold.Scaffold.all_in_neighbors_built"]], "all_nodes_built() (fugu.scaffold.scaffold.scaffold method)": [[23, "fugu.scaffold.scaffold.Scaffold.all_nodes_built"]], "fugu.scaffold.scaffold": [[23, "module-fugu.scaffold.scaffold"]], "get_weight() (fugu.scaffold.scaffold.scaffold method)": [[23, "fugu.scaffold.scaffold.Scaffold.get_weight"]], "lay_bricks() (fugu.scaffold.scaffold.scaffold method)": [[23, "fugu.scaffold.scaffold.Scaffold.lay_bricks"]], "resolve_timing() (fugu.scaffold.scaffold.scaffold method)": [[23, "fugu.scaffold.scaffold.Scaffold.resolve_timing"]], "summary() (fugu.scaffold.scaffold.scaffold method)": [[23, "fugu.scaffold.scaffold.Scaffold.summary"]], "supported_backends (fugu.scaffold.scaffold.scaffold attribute)": [[23, "fugu.scaffold.scaffold.Scaffold.supported_backends"]], "fill_results_from_graph() (in module fugu.utils.export_utils)": [[28, "fugu.utils.export_utils.fill_results_from_graph"]], "fugu.utils.export_utils": [[28, "module-fugu.utils.export_utils"]], "generate_gexf() (in module fugu.utils.export_utils)": [[28, "fugu.utils.export_utils.generate_gexf"]], "get_spiked_info() (in module fugu.utils.export_utils)": [[28, "fugu.utils.export_utils.get_spiked_info"]], "results_df_from_dict() (in module fugu.utils.export_utils)": [[28, "fugu.utils.export_utils.results_df_from_dict"]], "results_dict() (in module fugu.utils.export_utils)": [[28, "fugu.utils.export_utils.results_dict"]], "set_circuit_position() (in module fugu.utils.export_utils)": [[28, "fugu.utils.export_utils.set_circuit_position"]], "set_position() (in module fugu.utils.export_utils)": [[28, "fugu.utils.export_utils.set_position"]], "calculatespiketimes() (in module fugu.utils.misc)": [[30, "fugu.utils.misc.CalculateSpikeTimes"]], "fugu.utils.misc": [[30, "module-fugu.utils.misc"]]}})